{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/memoryDisplay.vue?vue&type=style&index=0&id=4dae3288&scoped=true&lang=css&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/memoryDisplay.vue","mtime":1614177666976},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1lbW9yeUNhcmQgewogIAogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMTYuNmRlZywgI0ZBNUUyRCAzNi4zJSwgI0U2MzcwMCA2OS43NCUpOwp9Cgo="},{"version":3,"sources":["memoryDisplay.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;AAEA;AACA","file":"memoryDisplay.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-overlay opacity=\"0\">\n    <v-card\n      elevation=\"2\"\n      class=\"memoryCard\"\n      min-width=\"300\"\n      max-width=\"500\">\n      <!--<v-card-title>Share a memory</v-card-title>-->\n      \n      <v-card-text>\n        <span>{{memory.date}}</span>\n          <p>{{memory.comment}}</p> \n          <br />   \n          <v-btn x-small  @click=\"close\">close</v-btn>\n      </v-card-text>\n    </v-card>\n  </v-overlay>\n</template>\n\n<script>\n//import MemoryService from '@/services/memoryService'\nexport default {\n  data () {\n    return {\n    \n    }\n  },\n\n  props: {\n    memory: Object,\n  },\n\nasyncComputed: {\n    async reactions() {\n      //let reaction = (await caseService.getCases({country: this.currentCountry})).data\n      return null\n    }\n  },\n\n  methods: {\n    close: function() {\n      this.$emit('close')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.memoryCard {\n  \n  background: linear-gradient(116.6deg, #FA5E2D 36.3%, #E63700 69.74%);\n}\n\n</style>"]}]}