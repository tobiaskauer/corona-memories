{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/App.vue","mtime":1615484721207},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vZ2V0IHBhY2thZ2VzCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgQXN5bmNDb21wdXRlZCBmcm9tICd2dWUtYXN5bmMtY29tcHV0ZWQnClZ1ZS51c2UoQXN5bmNDb21wdXRlZCkKaW1wb3J0ICdpbnRlcnNlY3Rpb24tb2JzZXJ2ZXInIC8vIGZvciBjcm9zcy1icm93c2VyIHN1cHBvcnQKaW1wb3J0IFNjcm9sbGFtYSBmcm9tICd2dWUtc2Nyb2xsYW1hJwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMycKCgovL2dldCBzZXJ2aWNlcyBmb3IgQVBJIGNvbm5lY3Rpdml0eQppbXBvcnQgY2FzZVNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlcy9jYXNlU2VydmljZScKaW1wb3J0IG1lbW9yeVNlcnZpY2UgZnJvbSAnQC9zZXJ2aWNlcy9tZW1vcnlTZXJ2aWNlJwoKLy9nZXQgY29tcG9uZW50cwppbXBvcnQgbWVtb3J5Rm9ybSBmcm9tICcuL2NvbXBvbmVudHMvbWVtb3J5Rm9ybScKaW1wb3J0IG1lbW9yeURpc3BsYXkgZnJvbSAnLi9jb21wb25lbnRzL21lbW9yeURpc3BsYXknCmltcG9ydCBjb3VudGVyIGZyb20gJy4vY29tcG9uZW50cy9jb3VudGVyJwppbXBvcnQgdmlzIGZyb20gJy4vY29tcG9uZW50cy92aXMnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgU2Nyb2xsYW1hLAogICAgbWVtb3J5Rm9ybSwKICAgIG1lbW9yeURpc3BsYXksCiAgICBjb3VudGVyLAogICAgdmlzCiAgfSwKCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBtb3VudGVkOiBmYWxzZSwKICAgICAgY29uc2VudDogdHJ1ZSwgLy9vbmx5IHN0YXJ0IHJlY29yZGluZyBhZnRlciBwZW9wbGUgY29uc2VudAogICAgICBjdXJyZW50U3RlcElkOiAwLCAvL3doYXQgcGFydCBvZiB0aGUgcGFnZSBhcmUgd2UgaW4/CiAgICAgIGNvdW50cmllczogbnVsbCwgCiAgICAgIGN1cnJlbnRDb3VudHJ5OiAiV29ybGQiLCAgICAgIAogICAgICBoYXNodGFnczogbnVsbCwKICAgICAgYWN0aXZlSGFzaHRhZzogbnVsbCwKCiAgICAgIHZpc09wdGlvbnM6IHsKICAgICAgICBkaW1lbnNpb25zOiB7d2lkdGg6IDAsIGhlaWdodDogMCwgdG9wOiA4MCwgcmlnaHQ6IDUwLCBib3R0b206IDAsIGxlZnQ6IDUwfSwKICAgICAgICBwcm9nZXNzOiAwLAogICAgICAgIG92ZXJsYXk6IGZhbHNlLAogICAgICAgIGRpc3BsYXlNZW1vcnk6IGZhbHNlCiAgICAgIH0sCgogICAgICBkaXNwbGF5TWVtb3J5OiB7CiAgICAgICAgZGlzcGxheTogZmFsc2UsCiAgICAgIH0sCiAgICAgIG5ld01lbW9yeTogewogICAgICAgIGRhdGVwaWNrZXI6IGZhbHNlLCAvL3Nob3cgY2lyY2xlIChmb3JtZXJseSBsaW5lKSB0aGF0IGFkZHMgbmV3IGRvdAogICAgICAgIHNob3dGb3JtOiBmYWxzZSwgLy9zaG93IGZvcm0gYWZ0ZXIgY2xpY2tpbmcgdGhlIGRvdAogICAgICAgIGRhdGU6ICIiIC8vaXMgc2V0IHdoZW4gaG92ZXJpbmcgbGluZSBhbmQgcGFzc2VkIHRvIG1lbW9yeSBmb3JtCiAgICAgICAgLy9kYXRlOiAiMjAyMC0wMi0yMyIgLy90byBxdWlja2VyIHRlc3QgZm9ybQogICAgICB9CiAgICB9CiAgfSwKCiAgYXN5bmNDb21wdXRlZDogewogICAgYXN5bmMgY2FzZXMoKSB7CiAgICAgIHJldHVybiAoYXdhaXQgY2FzZVNlcnZpY2UuZ2V0Q2FzZXMoe2NvdW50cnk6IHRoaXMuY3VycmVudENvdW50cnksIG1ldHJpYzogInJlbGF0aXZlX2Nhc2VzIn0pKS5kYXRhCiAgICB9LAogICAgYXN5bmMgbWVtb3JpZXMoKSB7CiAgICAgIHJldHVybiAoYXdhaXQgbWVtb3J5U2VydmljZS5nZXRNZW1vcmllcyh7Y291bnRyeTogdGhpcy5jdXJyZW50Q291bnRyeX0pKS5kYXRhCiAgICB9CiAgfSwKCiAgd2F0Y2g6ICB7CiAgICBtZW1vcmllczogZnVuY3Rpb24obWVtb3JpZXMpIHsKICAgICAgbGV0IHRhZ3MgPSBtZW1vcmllcy5tYXAobWVtb3J5ID0+IG1lbW9yeS5jb21tZW50Lm1hdGNoKC8jW2Etel0rL2dpKSkuZmxhdCgpIC8vZmluZCBhbGwgaGFzaHRhZ3MKICAgICAgbGV0IGNvdW50ZWQgPSB0YWdzLnJlZHVjZSgoYSwgYikgPT4gKGFbYl0gPSAoYVtiXSB8fCAwKSArIDEsIGEpLCB7fSkgLy9jb3VudCBvY2N1cmVuY2Ugb2Ygc2luZ2xlIGhhc2h0YWdzCiAgICAgIGxldCByYW5rZWQgPSBPYmplY3Qua2V5cyhjb3VudGVkKQogICAgICAgIC5tYXAodGFnID0+IHtyZXR1cm4ge3RhZzogdGFnLCBvY2N1cmVuY2VzOiBjb3VudGVkW3RhZ119fSkgLy90dXJuIGludG8gYXJyYXkKICAgICAgICAuc29ydCgoYSxiKSA9PiBiLm9jY3VyZW5jZXMgLSBhLm9jY3VyZW5jZXMpIC8vc29ydCB0aGF0IGFycmF5CiAgICAgIAogICAgICBsZXQgc2NhbGVTaXplID0gZDMuc2NhbGVMaW5lYXIoKS5kb21haW4oZDMuZXh0ZW50KHJhbmtlZCxyPT5yLm9jY3VyZW5jZXMpKS5yYW5nZShbNSwxNV0pIC8vY3JlYXRlIHNjYWxlIGZvciBmb250IHN6ZSBvZiBoYXNodGFncwogICAgICByYW5rZWQuZm9yRWFjaChoYXNodGFnID0+IGhhc2h0YWcuc2l6ZSA9IHNjYWxlU2l6ZShoYXNodGFnLm9jY3VyZW5jZXMpKSAvL2Fzc2lnbiBmb250IHNpemUgdG8gZWFjaCBoYXNodGFnCiAgICAgIHRoaXMuaGFzaHRhZ3MgPSByYW5rZWQ7CiAgICB9CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLnJlc2l6ZSk7CiAgfSwKCiAgYXN5bmMgbW91bnRlZCAoKSB7CiAgICB0aGlzLmNvdW50cmllcyA9IChhd2FpdCBjYXNlU2VydmljZS5nZXRDb3VudHJpZXMoKSkuZGF0YS5tYXAoZSA9PiBlLmNvdW50cnkpCiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIHRoaXMucmVzaXplKCkKICAgICAgdGhpcy5tb3VudGVkID0gdHJ1ZTsKICAgIH0pICAgIAogfSwKCiAgbWV0aG9kczogewogICAgcmVzaXplOiBmdW5jdGlvbigpIHsKICAgICAgVnVlLnNldCh0aGlzLnZpc09wdGlvbnMuZGltZW5zaW9ucywnd2lkdGgnLHdpbmRvdy5pbm5lcldpZHRoKQogICAgICBWdWUuc2V0KHRoaXMudmlzT3B0aW9ucy5kaW1lbnNpb25zLCdoZWlnaHQnLHdpbmRvdy5pbm5lckhlaWdodCkKICAgIH0sCgogICAgZ2l2ZUNvbnNlbnQ6IGZ1bmN0aW9uKCkgewogICAgICB0aGlzLmNvbnNlbnQgPSB0cnVlCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLiR2dWV0aWZ5LmdvVG8oIiN0YXJnZXQiLCB7ZHVyYXRpb246IDIwMDB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIHNob3dNZW1vcnk6IGZ1bmN0aW9uKG1lbW9yeSkgewogICAgICBpZihtZW1vcnkpIHsKICAgICAgICBWdWUuc2V0KHRoaXMubWVtb3JpZXNbdGhpcy5tZW1vcmllcy5maW5kSW5kZXgoZSA9PiBlLmlkID09IG1lbW9yeS5pZCldLCdhY3RpdmUnLHRydWUpIC8vc2V0IG1lbW9yeSBhY3RpdmUKICAgICAgICBWdWUuc2V0KHRoaXMuZGlzcGxheU1lbW9yeSwnbWVtb3J5JyxtZW1vcnkpCiAgICAgICAgVnVlLnNldCh0aGlzLmRpc3BsYXlNZW1vcnksJ2Rpc3BsYXknLHRydWUpCiAgICAgICAgVnVlLnNldCh0aGlzLnZpc09wdGlvbnMsJ292ZXJsYXknLHRydWUpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgVnVlLnNldCh0aGlzLmRpc3BsYXlNZW1vcnksJ2Rpc3BsYXknLGZhbHNlKQogICAgICAgIFZ1ZS5zZXQodGhpcy5tZW1vcmllc1t0aGlzLm1lbW9yaWVzLmZpbmRJbmRleChlID0+IGUuYWN0aXZlKV0sJ2FjdGl2ZScsZmFsc2UpCiAgICAgICAgVnVlLnNldCh0aGlzLnZpc09wdGlvbnMsJ292ZXJsYXknLGZhbHNlKQogICAgICAgIAogICAgICB9CiAgICB9LAoKICAgIHN0ZXBFbnRlckhhbmRsZXIoe2VsZW1lbnQsIGRpcmVjdGlvbn0pIHsKICAgICAgZGlyZWN0aW9uIC8vbWF5YmUgd2UgbmVlZCB0aGlzIGxhdGVyCiAgICAgIHN3aXRjaChlbGVtZW50LmNsYXNzTmFtZSkgewogICAgICAgIGNhc2UgImludHJvV3JhcHBlciI6IAogICAgICAgICAgIFZ1ZS5zZXQodGhpcy52aXNPcHRpb25zLCdwcm9ncmVzcycsMCkKICAgICAgICAgIGJyZWFrCiAgICAgIH0KICAgICAgdGhpcy5jdXJyZW50U3RlcElkID0gZWxlbWVudC5kYXRhc2V0LnN0ZXAKICAgIH0sCgogICAgc3RlcFByb2dyZXNzSGFuZGxlcih7ZWxlbWVudCwgcHJvZ3Jlc3N9KSB7CiAgICAgIGlmKGVsZW1lbnQuY2xhc3NOYW1lID09ICJhbmltYXRvcldyYXBwZXIiICYmIHRoaXMuY29uc2VudCkgeyAvL2lmIHZpc2l0b3IgaGFzIGNvbnNlbnRlbnQgQU5EIHdlcmUgc2Nyb2xsaW5nIG92ZXIgdGhlIGFuaW1hdG9yV3JhcHBlcgogICAgICAgIGxldCBzaG93RWxlbWVudHNOdW1iZXIgPSBNYXRoLmNlaWwocHJvZ3Jlc3MgKiB0aGlzLm1lbW9yaWVzLmxlbmd0aCkgLy9jb21wdXRlIG51bWJlciBvZiBtZW1vcmllcyB0byBzaG93IChtaW46IDAsIG1heDogYWxsIG1lbW9yaWVzKQogICAgICAgIFZ1ZS5zZXQodGhpcy52aXNPcHRpb25zLCdwcm9ncmVzcycsc2hvd0VsZW1lbnRzTnVtYmVyKSAvL3dyaXRlIHRvIHJlYWN0aXZlIGRhdGEKICAgICAgfQogICAgfSwKCiAgICB0b2dnbGVEYXRlcGlja2VyOiBmdW5jdGlvbigpIHsKICAgICAgbGV0IGJvb2wgPSAhdGhpcy5uZXdNZW1vcnkuZGF0ZXBpY2tlcgogICAgICBWdWUuc2V0KHRoaXMubmV3TWVtb3J5LCdkYXRlcGlja2VyJyxib29sKQogICAgfSwKCiAgICBmaWx0ZXJNZW1vcmllczogZnVuY3Rpb24oaGFzaHRhZykgewogICAgICBpZih0aGlzLmFjdGl2ZUhhc2h0YWcgIT0gaGFzaHRhZykgewogICAgICAgIHRoaXMuYWN0aXZlSGFzaHRhZyA9IGhhc2h0YWcKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmFjdGl2ZUhhc2h0YWcgPSBudWxsCiAgICAgIH0KICAgIH0sCgogICAgdG9nZ2xlRm9ybTogZnVuY3Rpb24oZGF0ZSkgeyAvL3VzaW5nIGFuIG93biBtZXRob2QgaW5zdGVhZCBvZiBpbmxpbmUgYXNzaWdubWVudCB0byBzdGF5IHNhbmUKICAgICAgCiAgICAgIGlmKGRhdGUpIHsKICAgICAgICBWdWUuc2V0KHRoaXMubmV3TWVtb3J5LCdkYXRlJyxkYXRlKQogICAgICAgIFZ1ZS5zZXQodGhpcy5uZXdNZW1vcnksJ2RhdGVwaWNrZXInLGZhbHNlKQogICAgICAgIFZ1ZS5zZXQodGhpcy5uZXdNZW1vcnksJ3Nob3dGb3JtJyx0cnVlKQogICAgICAgIHRoaXMub3ZlcmxheSA9IHRydWUKICAgICAgfSBlbHNlIHsKICAgICAgICBWdWUuc2V0KHRoaXMubmV3TWVtb3J5LCdzaG93Rm9ybScsZmFsc2UpCiAgICAgICAgdGhpcy5vdmVybGF5ID0gZmFsc2UKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <template v-if=\"cases && memories && countries && mounted\">\n    \n    <Scrollama\n      class=\"scrollama\"\n      :progress=\"true\"\n      @step-enter=\"stepEnterHandler\"\n      @step-progress=\"stepProgressHandler\"\n    >\n\n      <!-- display intro-text and consent form -->\n      <div slot=\"graphic\" class=\"visWrapper\"> \n        <vis\n          :cases=\"cases\"\n          :memories=\"memories\"\n          :options=\"visOptions\"\n          :country=\"currentCountry\"\n          :datePicker=\"newMemory.datepicker\"\n          :hashtag=\"activeHashtag\"\n          @toggleForm=\"toggleForm($event)\"\n          @showMemory=\"showMemory\" />\n      </div>\n\n        <div class=\"introWrapper\" data-step=\"1\">  \n          <h1>corona<br /><span>memories</span></h1>\n          <p class=\"larger\"> Numbers do not tell stories. <strong>People do.</strong></p>\n          <p>Since the start of the pandemic <counter /> days ago, we are confronted with charts about new cases or even deaths. What are the human stories behind the numbers?</p>\n          <p class=\"smaller\">The research is conducted by Tobias Kauer (University of Edinburgh), Benjamin Bach (University of Edinburgh), and Marian Dörk (Potsdam University of Applied Sciences). It has been granted approval by the ethics committee. By clicking the button, you indicate that you are a speaker of English and at least 18 years old. You read the information letter and you voluntarily agree to  participate, and understand you can stop your participation at any time. You agree that your anonymous data may be kept permanently in Edinburgh University archived and may be used by qualified researchers for teaching and research purposes.</p>\n            <v-btn color=\"primary\" outlined @click=\"giveConsent\">\n              <v-icon small>mdi-check-circle</v-icon>\n             I agree, show me\n            </v-btn>\n        </div>\n\n        <!-- wrapper that controls progress of appearing memory bubbles -->\n        <div class=\"animatorWrapper\" data-step=\"2\"></div> \n\n        <!-- display exploration controls and trigger submission form -->\n        <div v-if=\"consent\" id=\"target\" class=\"explorationWrapper\" data-step=\"3\"> \n          <p><strong>Click the bubbles to read people’s stories.</strong><br />Select countries and/or hashtags to filter.</p>\n          <v-select\n            :items=\"countries\"\n            v-model=\"currentCountry\"\n            label=\"Your country\"\n            outlined />\n          <p v-if=\"hashtags\" class=\"hashtags\">\n            <v-chip\n              v-for=\"(hashtag, i) in hashtags.filter((e,i) => i<10).sort((a,b) => a.tag.localeCompare(b.tag))\"\n              small\n              color=\"primary\"\n              :outlined=\"(activeHashtag != hashtag.tag)\"\n              :style=\"{fontSize: hashtag.size+'px', margin: '2px'}\"\n              :key=\"'hashtag-'+i\"\n              @click=\"filterMemories(hashtag.tag)\">{{hashtag.tag}} </v-chip>\n          </p>\n        </div>\n    </Scrollama>\n\n    <!-- call to action button -->\n    <div class=\"callToActionWrapper\" v-if=\"consent && currentStepId > 1\">\n          <v-btn color=\"primary\" outlined elevation=\"2\" @click=\"toggleDatepicker\">\n            <template v-if=\"!newMemory.datepicker\">\n              <v-icon small>mdi-tooltip-plus-outline</v-icon>Add your story to the curve\n            </template>\n            <template v-else>\n              <v-icon small>mdi-close-circle-outline</v-icon>Stop adding\n            </template>\n          </v-btn>\n    </div>\n\n    <!-- submission form (default: hidden) -->\n    <div class=\"formWrapper\" v-if=\"newMemory.showForm\">\n      <memoryForm\n        :date=\"newMemory.date\"\n        :country=\"currentCountry\"\n        :countries=\"countries\"\n        :hashtags=\"hashtags\"\n        @close=\"toggleForm(false)\"/>\n    </div>\n\n    <!-- display single memory (default: hidden) -->\n    <div class=\"memoryWrapper\" v-if=\"displayMemory.display\">\n      <memoryDisplay\n        :memory=\"displayMemory.memory\"\n        @close=\"showMemory(false)\"/>\n    </div>\n    </template>\n\n    <!-- loading screen if not everything has loaded yet -->\n    <template v-else>\n      <v-card class=\"d-flex justify-center mb-6\" color=\"rgb(255, 0, 0, 0.0)\" elevation=\"0\" style=\"margin-top: 100px;\">\n        <v-progress-circular\n        :size=\"300\"\n        indeterminate\n        color=\"primary\"\n        >Loading ...<br />try refresing?</v-progress-circular>\n      </v-card>\n      </template>\n  </v-app>\n</template>\n\n<script>\n//get packages\nimport Vue from 'vue'\nimport AsyncComputed from 'vue-async-computed'\nVue.use(AsyncComputed)\nimport 'intersection-observer' // for cross-browser support\nimport Scrollama from 'vue-scrollama'\nimport * as d3 from 'd3'\n\n\n//get services for API connectivity\nimport caseService from '@/services/caseService'\nimport memoryService from '@/services/memoryService'\n\n//get components\nimport memoryForm from './components/memoryForm'\nimport memoryDisplay from './components/memoryDisplay'\nimport counter from './components/counter'\nimport vis from './components/vis'\n\nexport default {\n  name: 'App',\n  components: {\n    Scrollama,\n    memoryForm,\n    memoryDisplay,\n    counter,\n    vis\n  },\n\n  data () {\n    return {\n      mounted: false,\n      consent: true, //only start recording after people consent\n      currentStepId: 0, //what part of the page are we in?\n      countries: null, \n      currentCountry: \"World\",      \n      hashtags: null,\n      activeHashtag: null,\n\n      visOptions: {\n        dimensions: {width: 0, height: 0, top: 80, right: 50, bottom: 0, left: 50},\n        progess: 0,\n        overlay: false,\n        displayMemory: false\n      },\n\n      displayMemory: {\n        display: false,\n      },\n      newMemory: {\n        datepicker: false, //show circle (formerly line) that adds new dot\n        showForm: false, //show form after clicking the dot\n        date: \"\" //is set when hovering line and passed to memory form\n        //date: \"2020-02-23\" //to quicker test form\n      }\n    }\n  },\n\n  asyncComputed: {\n    async cases() {\n      return (await caseService.getCases({country: this.currentCountry, metric: \"relative_cases\"})).data\n    },\n    async memories() {\n      return (await memoryService.getMemories({country: this.currentCountry})).data\n    }\n  },\n\n  watch:  {\n    memories: function(memories) {\n      let tags = memories.map(memory => memory.comment.match(/#[a-z]+/gi)).flat() //find all hashtags\n      let counted = tags.reduce((a, b) => (a[b] = (a[b] || 0) + 1, a), {}) //count occurence of single hashtags\n      let ranked = Object.keys(counted)\n        .map(tag => {return {tag: tag, occurences: counted[tag]}}) //turn into array\n        .sort((a,b) => b.occurences - a.occurences) //sort that array\n      \n      let scaleSize = d3.scaleLinear().domain(d3.extent(ranked,r=>r.occurences)).range([5,15]) //create scale for font sze of hashtags\n      ranked.forEach(hashtag => hashtag.size = scaleSize(hashtag.occurences)) //assign font size to each hashtag\n      this.hashtags = ranked;\n    }\n  },\n\n  created() {\n    window.addEventListener(\"resize\", this.resize);\n  },\n\n  async mounted () {\n    this.countries = (await caseService.getCountries()).data.map(e => e.country)\n    this.$nextTick(() => {\n      this.resize()\n      this.mounted = true;\n    })    \n },\n\n  methods: {\n    resize: function() {\n      Vue.set(this.visOptions.dimensions,'width',window.innerWidth)\n      Vue.set(this.visOptions.dimensions,'height',window.innerHeight)\n    },\n\n    giveConsent: function() {\n      this.consent = true\n      this.$nextTick(() => {\n        this.$vuetify.goTo(\"#target\", {duration: 2000});\n      });\n    },\n\n    showMemory: function(memory) {\n      if(memory) {\n        Vue.set(this.memories[this.memories.findIndex(e => e.id == memory.id)],'active',true) //set memory active\n        Vue.set(this.displayMemory,'memory',memory)\n        Vue.set(this.displayMemory,'display',true)\n        Vue.set(this.visOptions,'overlay',true)\n      } else {\n        Vue.set(this.displayMemory,'display',false)\n        Vue.set(this.memories[this.memories.findIndex(e => e.active)],'active',false)\n        Vue.set(this.visOptions,'overlay',false)\n        \n      }\n    },\n\n    stepEnterHandler({element, direction}) {\n      direction //maybe we need this later\n      switch(element.className) {\n        case \"introWrapper\": \n           Vue.set(this.visOptions,'progress',0)\n          break\n      }\n      this.currentStepId = element.dataset.step\n    },\n\n    stepProgressHandler({element, progress}) {\n      if(element.className == \"animatorWrapper\" && this.consent) { //if visitor has consentent AND were scrolling over the animatorWrapper\n        let showElementsNumber = Math.ceil(progress * this.memories.length) //compute number of memories to show (min: 0, max: all memories)\n        Vue.set(this.visOptions,'progress',showElementsNumber) //write to reactive data\n      }\n    },\n\n    toggleDatepicker: function() {\n      let bool = !this.newMemory.datepicker\n      Vue.set(this.newMemory,'datepicker',bool)\n    },\n\n    filterMemories: function(hashtag) {\n      if(this.activeHashtag != hashtag) {\n        this.activeHashtag = hashtag\n      } else {\n        this.activeHashtag = null\n      }\n    },\n\n    toggleForm: function(date) { //using an own method instead of inline assignment to stay sane\n      \n      if(date) {\n        Vue.set(this.newMemory,'date',date)\n        Vue.set(this.newMemory,'datepicker',false)\n        Vue.set(this.newMemory,'showForm',true)\n        this.overlay = true\n      } else {\n        Vue.set(this.newMemory,'showForm',false)\n        this.overlay = false\n      }\n    }\n  }\n}\n</script>\n\n<style src=\"vue-scrollama/dist/vue-scrollama.css\"></style>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@400;900&display=swap');\n\n.introWrapper, .explorationWrapper, .animatorWrapper  {\n  //border: 1px dotted black;\n  height: 100vh;\n  padding-top: 10px;\n}\n\n.scrollama {\n  width: 40%;\n  padding: 0 0px 50px 30px;\n  min-width: 200px;\n  max-width: 400px;\n  font-family: 'Roboto Slab', serif;\n  pointer-events: none;\n}\n\nbutton, .v-input {\n  pointer-events: all;\n}\n\nh1{\n  margin: 50px 0 10px 0px;\n  //height: 100px;\n  //position: fixed;\n  font-family: 'Roboto Slab', serif;\n  font-weight: 400;\n  font-size: 40px;\n  color: #FA5E2D;\n  line-height: 30px;\n}\n\n.callToActionWrapper {\n  position: fixed;\n  top: 10px;\n  right: 10px;\n}\n\nh1 span{\n  font-weight: 900;\n}\n\np {\n  font-family: 'Roboto Slab', serif;\n  font-weight: 400;\n}\n\np.larger {\n  font-size: 1.2em;\n}\n\np.smaller {\n  color: rgba(0,0,0);\n  font-size: 9px;\n  line-height: 10px;\n}\n\n.visWrapper {\n  position: fixed;\n  width: 100%;\n  left: 0;\n  height: 100%;\n  pointer-events: all;\n}\n\n.hashtags {\n  pointer-events: all;\n  line-height: 100%;\n}\n\n\n#app {\n  background: #FFEBC6;\n  min-height: 100%;\n  height: 100%;\n}\n</style>\n"]}]}