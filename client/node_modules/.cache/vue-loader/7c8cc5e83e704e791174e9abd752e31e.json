{"remainingRequest":"/Users/tk/GitHub/corona-memories/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/src/components/vis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/src/components/vis.vue","mtime":1612973798638},{"path":"/Users/tk/GitHub/corona-memories/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJwoKZXhwb3J0IGRlZmF1bHQgewogY29tcG9uZW50czogewogfSwKCgogZGF0YSAoKSB7CiAgIHJldHVybiB7CiAgICAgbW91bnRlZDogZmFsc2UsCiAgICAgb3BhY2l0eTogLjcsCiAgICAgbWV0cmljOiAncmVsYXRpdmUnLAogICAgIGNzdjogbnVsbCwKICAgfQogfSwKCgogY29tcHV0ZWQ6IHsKICAgc2NhbGVzOiBmdW5jdGlvbigpIHsKICAgICBpZighdGhpcy5jc3YpIHJldHVybiBudWxsCiAgICAgbGV0IHlEb21haW4gPSBbMCxkMy5tYXgodGhpcy5jc3YsIGQ9PitkW3RoaXMubWV0cmljXSldCiAgICAgbGV0IHhEb21haW4gPSBkMy5leHRlbnQodGhpcy5jc3YsIGQ9PmQuZGF0ZSkKICAgICBsZXQgeCA9IGQzLnNjYWxlVGltZSgpLmRvbWFpbih4RG9tYWluKS5yYW5nZShbNTAsNjUwXSkKICAgICBsZXQgeSA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKHlEb21haW4pLnJhbmdlKFs0MDAsNTBdKQoKICAgICByZXR1cm4ge3g6IHgsIHk6IHl9CiAgIH0sCgogICByZWFjdGlvbnM6IGZ1bmN0aW9uKCl7CiAgICAgaWYoIXRoaXMuY291bnRyaWVzKSByZXR1cm4gZmFsc2UKCiAgICAgbGV0IGZvcm1hdFRpbWUgPSBkMy50aW1lRm9ybWF0KCIlbS8lZC8leSIpCiAgICAgbGV0IHJlYWN0aW9uQXJyID0gW10gLy9jcmVhdGUgc2FtcGxlIHJlYWN0aW9ucwogICAgIE9iamVjdC5rZXlzKHRoaXMuY291bnRyaWVzKS5mb3JFYWNoKGNvdW50cnkgPT4gewogICAgICAgZDMucmFuZ2UoNTAwKS5mb3JFYWNoKCgpID0+IHsKICAgICAgICAgbGV0IGRhdGUgPSB0aGlzLmdldFJhbmRvbURhdGUodGhpcy5zY2FsZXMueC5kb21haW4oKSkKICAgICAgICAgcmVhY3Rpb25BcnIucHVzaCh7CiAgICAgICAgICAgZGF0ZTogZGF0ZSwKICAgICAgICAgICB2YWx1ZTogdGhpcy5jb3VudHJpZXNbY291bnRyeV0uY2FzZXMuZmluZChjID0+IGZvcm1hdFRpbWUoYy5kYXRlKSA9PSBmb3JtYXRUaW1lKGRhdGUpKVt0aGlzLm1ldHJpY10sCiAgICAgICAgICAgY29tbWVudDogImZvb2JhciIsCiAgICAgICAgICAgd2VpZ2h0OiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqNSksCiAgICAgICAgICAgY291bnRyeTogY291bnRyeSwKICAgICAgICAgfSkKICAgICAgIH0pCiAgICAgfSkKCiAgICAgLypyZWFjdGlvbkFyci5mb3JFYWNoKHJlYWN0aW9uID0+IHsKICAgICAgIHJlYWN0aW9uLnh4ID0gdGhpcy5zY2FsZXMueChyZWFjdGlvbi5kYXRlKQogICAgICAgcmVhY3Rpb24ueXkgPSB0aGlzLnNjYWxlcy55KHJlYWN0aW9uLnZhbHVlKQogICAgIH0pKi8KCiAgICAgbGV0IGZvcmNlID0gZDMuZm9yY2VTaW11bGF0aW9uKHJlYWN0aW9uQXJyKQogICAgICAvLy5mb3JjZSgnY2hhcmdlJywgZDMuZm9yY2VNYW55Qm9keSgpLnN0cmVuZ3RoKDEwKSkKICAgICAgLy8uZm9yY2UoJ2NlbnRlcicsIGQzLmZvcmNlQ2VudGVyKDAsMCkpCgogICAgICAvL2NhbGN1bGF0ZSBmaXJzdCwgdGhlbiB1c2Ugc3RyYWlnaHQgdmFsdWVzIGhlcmUKICAgICAgLy8uZm9yY2UoJ2ZvcmNlWCcsIGQzLmZvcmNlWChyZWFjdGlvbiA9PiByZWFjdGlvbi54eCkuc3RyZW5ndGgoMSkpCiAgICAgIC8vLmZvcmNlKCdmb3JjZVknLCBkMy5mb3JjZVkocmVhY3Rpb24gPT4gcmVhY3Rpb24ueXkpLnN0cmVuZ3RoKDIpKQoKICAgICAgLy9ubyBwcmUtY2FsY3VsYXRpb24sIGJ1dCBkb250IGhhdmUgb3JpZ2luYWwgdmFsdWVzIGhlcmUKICAgICAgLy8uZm9yY2UoJ2ZvcmNlWCcsIGQzLmZvcmNlWChyZWFjdGlvbiA9PiB0aGlzLnNjYWxlcy54KHJlYWN0aW9uLmRhdGUpKS5zdHJlbmd0aCgxKSkKICAgICAgLy8uZm9yY2UoJ2ZvcmNlWScsIGQzLmZvcmNlWShyZWFjdGlvbiA9PiB0aGlzLnNjYWxlcy55KHJlYWN0aW9uLnZhbHVlKSApLnN0cmVuZ3RoKDIpKQoKICAgICAgLy9kZXZpYXRlIHdpdGggbW9kdWxvCiAgICAgIC5mb3JjZSgnZm9yY2VYJywgZDMuZm9yY2VYKHJlYWN0aW9uID0+IHRoaXMuc2NhbGVzLngocmVhY3Rpb24uZGF0ZSkpLnN0cmVuZ3RoKC4xKSkKICAgICAgLmZvcmNlKCdmb3JjZVknLCBkMy5mb3JjZVkoKHJlYWN0aW9uLGkpID0+IHRoaXMuc2NhbGVzLnkocmVhY3Rpb24udmFsdWUpICsgKC04ICsgKGklMikqMTApKS5zdHJlbmd0aCguMSkpCiAgICAgIC5mb3JjZSgnY29sbGlkZScsIGQzLmZvcmNlQ29sbGlkZShkID0+IGQud2VpZ2h0KSkKCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcmVhY3Rpb25BcnIubGVuZ3RoOyArK2kpIHsKICAgICAgICAvL2NvbnNvbGUubG9nKHJlYWN0aW9uQXJyW2ldKQogICAgICAgICBmb3JjZS50aWNrKCkKICAgICAgIH0KCiAgICAgICBjb25zb2xlLmxvZyhmb3JjZS5ub2RlcygpKQoKICAgICByZXR1cm4gZm9yY2Uubm9kZXMoKQoKICAgfSwKCiAgIGNvdW50cmllczogZnVuY3Rpb24oKSB7CiAgICAgaWYoIXRoaXMuY3N2IHx8ICF0aGlzLnNjYWxlcykgcmV0dXJuIGZhbHNlCgogICAgIGNvbnN0IGxpbmVHZW5lcmF0b3IgPSBkMy5saW5lKCkKICAgICAgLngoZCA9PiB0aGlzLnNjYWxlcy54KGQuZGF0ZSkpCiAgICAgIC55KGQgPT4gdGhpcy5zY2FsZXMueShkW3RoaXMubWV0cmljXSkpCgogICAgbGV0IGNvdW50cmllc01hcCA9IGQzLmdyb3VwKHRoaXMuY3N2LCBkID0+IGQuY291bnRyeSkKICAgIGxldCBjb3VudHJpZXNPYmogPSBPYmplY3QuZnJvbUVudHJpZXMoY291bnRyaWVzTWFwKQogICAgT2JqZWN0LmtleXMoY291bnRyaWVzT2JqKS5tYXAoa2V5ID0+IHsKICAgICAgY291bnRyaWVzT2JqW2tleV0gPSB7CiAgICAgICAgY2FzZXM6IGNvdW50cmllc09ialtrZXldLAogICAgICAgIGxpbmU6IGxpbmVHZW5lcmF0b3IoY291bnRyaWVzT2JqW2tleV0pCiAgICAgIH0KICAgIH0pCiAgICByZXR1cm4gY291bnRyaWVzT2JqCiAgIH0sCiB9LAoKIGNyZWF0ZWQoKSB7CiAgIGNvbnN0IHBhcnNlRGF0ZSA9IGQzLnV0Y1BhcnNlKCIlbS8lZC8leSIpCiAgIGQzLmNzdignZGF0YS5jc3YnKS50aGVuKGQgPT4gewogICAgIHRoaXMuY3N2ID0gZC5tYXAocm93ID0+IHsKICAgICAgIHJvdy5kYXRlID0gcGFyc2VEYXRlKHJvdy5kYXRlKQogICAgICAgcmV0dXJuIHJvdwogICAgIH0pCiAgICAgLmZpbHRlcihkPT4gZC5jb3VudHJ5ID09ICJHZXJtYW55IikKICAgfSkKCiB9LAoKIG1vdW50ZWQoKSB7CiAgIHRoaXMubW91bnRlZCA9IHRydWUKIH0sCgogbWV0aG9kczogewogICBnZXRSYW5kb21EYXRlOiBmdW5jdGlvbihleHRlbnQpIHsKICAgICBsZXQgZGF0ZSA9IG5ldyBEYXRlKGV4dGVudFswXS5nZXRUaW1lKCkgKyBNYXRoLnJhbmRvbSgpICogKGV4dGVudFsxXS5nZXRUaW1lKCkgLSBleHRlbnRbMF0uZ2V0VGltZSgpKSkKICAgICBkYXRlLnNldEhvdXJzKDAsMCwwKQogICAgIHJldHVybiBkYXRlCiAgIH0sCgogICBob3ZlcjogZnVuY3Rpb24ocmVhY3Rpb24sZXZlbnQpIHsKICAgICBsZXQgciA9IDcKICAgICBsZXQgb3BhY2l0eSA9IDEKICAgICBpZihldmVudC50eXBlID09ICdtb3VzZW91dCcpIHsKICAgICAgIHIgPSByZWFjdGlvbi53ZWlnaHQKICAgICAgIG9wYWNpdHkgPSB0aGlzLm9wYWNpdHkKICAgICB9CiAgICAgZDMuc2VsZWN0KGV2ZW50LnRhcmdldCkudHJhbnNpdGlvbigpLmF0dHIoInIiLHIpLmF0dHIoIm9wYWNpdHkiLG9wYWNpdHkpCiAgIH0KIH0KfQo="},{"version":3,"sources":["vis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vis.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <svg width=\"700\" height=\"1000\">\n    <defs>\n      <filter id=\"f1\"><feGaussianBlur in=\"SourceGraphic\" :stdDeviation=\"0\" /></filter>\n    </defs>\n\n    <g class=\"lines\" v-if=\"countries\">\n      <path v-for=\"country,i in countries\" :key=\"i\" :d=\"country.line\" filter=\"url(#f1)\" />\n    </g>\n\n    <g class=\"reactions\" v-if=\"reactions\" transform=\"translate(0,0)\">\n      <circle v-for=\"reaction, j in reactions\" :key=\"j\" :cx=\"reaction.x\" :cy=\"reaction.y\" :opacity=\"opacity\" :r=\"reaction.weight\" fill=\"#AFFE06\" @mouseover=\"hover(reaction,$event)\" @mouseout=\"hover(reaction,$event)\" />\n    </g>\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n components: {\n },\n\n\n data () {\n   return {\n     mounted: false,\n     opacity: .7,\n     metric: 'relative',\n     csv: null,\n   }\n },\n\n\n computed: {\n   scales: function() {\n     if(!this.csv) return null\n     let yDomain = [0,d3.max(this.csv, d=>+d[this.metric])]\n     let xDomain = d3.extent(this.csv, d=>d.date)\n     let x = d3.scaleTime().domain(xDomain).range([50,650])\n     let y = d3.scaleLinear().domain(yDomain).range([400,50])\n\n     return {x: x, y: y}\n   },\n\n   reactions: function(){\n     if(!this.countries) return false\n\n     let formatTime = d3.timeFormat(\"%m/%d/%y\")\n     let reactionArr = [] //create sample reactions\n     Object.keys(this.countries).forEach(country => {\n       d3.range(500).forEach(() => {\n         let date = this.getRandomDate(this.scales.x.domain())\n         reactionArr.push({\n           date: date,\n           value: this.countries[country].cases.find(c => formatTime(c.date) == formatTime(date))[this.metric],\n           comment: \"foobar\",\n           weight: Math.floor(Math.random()*5),\n           country: country,\n         })\n       })\n     })\n\n     /*reactionArr.forEach(reaction => {\n       reaction.xx = this.scales.x(reaction.date)\n       reaction.yy = this.scales.y(reaction.value)\n     })*/\n\n     let force = d3.forceSimulation(reactionArr)\n      //.force('charge', d3.forceManyBody().strength(10))\n      //.force('center', d3.forceCenter(0,0))\n\n      //calculate first, then use straight values here\n      //.force('forceX', d3.forceX(reaction => reaction.xx).strength(1))\n      //.force('forceY', d3.forceY(reaction => reaction.yy).strength(2))\n\n      //no pre-calculation, but dont have original values here\n      //.force('forceX', d3.forceX(reaction => this.scales.x(reaction.date)).strength(1))\n      //.force('forceY', d3.forceY(reaction => this.scales.y(reaction.value) ).strength(2))\n\n      //deviate with modulo\n      .force('forceX', d3.forceX(reaction => this.scales.x(reaction.date)).strength(.1))\n      .force('forceY', d3.forceY((reaction,i) => this.scales.y(reaction.value) + (-8 + (i%2)*10)).strength(.1))\n      .force('collide', d3.forceCollide(d => d.weight))\n\n      for (let i = 0; i < reactionArr.length; ++i) {\n        //console.log(reactionArr[i])\n         force.tick()\n       }\n\n       console.log(force.nodes())\n\n     return force.nodes()\n\n   },\n\n   countries: function() {\n     if(!this.csv || !this.scales) return false\n\n     const lineGenerator = d3.line()\n      .x(d => this.scales.x(d.date))\n      .y(d => this.scales.y(d[this.metric]))\n\n    let countriesMap = d3.group(this.csv, d => d.country)\n    let countriesObj = Object.fromEntries(countriesMap)\n    Object.keys(countriesObj).map(key => {\n      countriesObj[key] = {\n        cases: countriesObj[key],\n        line: lineGenerator(countriesObj[key])\n      }\n    })\n    return countriesObj\n   },\n },\n\n created() {\n   const parseDate = d3.utcParse(\"%m/%d/%y\")\n   d3.csv('data.csv').then(d => {\n     this.csv = d.map(row => {\n       row.date = parseDate(row.date)\n       return row\n     })\n     .filter(d=> d.country == \"Germany\")\n   })\n\n },\n\n mounted() {\n   this.mounted = true\n },\n\n methods: {\n   getRandomDate: function(extent) {\n     let date = new Date(extent[0].getTime() + Math.random() * (extent[1].getTime() - extent[0].getTime()))\n     date.setHours(0,0,0)\n     return date\n   },\n\n   hover: function(reaction,event) {\n     let r = 7\n     let opacity = 1\n     if(event.type == 'mouseout') {\n       r = reaction.weight\n       opacity = this.opacity\n     }\n     d3.select(event.target).transition().attr(\"r\",r).attr(\"opacity\",opacity)\n   }\n }\n}\n</script>\n\n<style scoped>\n  path {\n    fill: none;\n    stroke: white;\n  }\n</style>\n"]}]}