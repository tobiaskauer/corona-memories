{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/vis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/vis.vue","mtime":1613591321229},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFyc2VEYXRlOiBkMy51dGNQYXJzZSgiJVktJW0tJWQiKSwKICAgICAgbW91bnRlZDogZmFsc2UsCiAgICAgIG9wYWNpdHk6IDAuNywKICAgICAgZm9yY2VEaXN0YW5jZTogNgogICAgfQogIH0sCgogIHByb3BzOiB7CiAgICBkaW1lbnNpb25zOiBPYmplY3QsCiAgICBjYXNlczogQXJyYXksCiAgICBtZXRyaWM6IFN0cmluZywKICAgIG1lbW9yaWVzOiBBcnJheQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBwYXJzZWRDYXNlczogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiB0aGlzLmNhc2VzLm1hcChjID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgZGF0ZTogdGhpcy5wYXJzZURhdGUoYy5kKSwKICAgICAgICAgIHJlbGF0aXZlOiBjLnIsCiAgICAgICAgICBjdW11bGF0aXZlOiBjLmMsCiAgICAgICAgICBuZXc6IGMubgogICAgICAgIH0KICAgICAgfSkKICAgIH0sCgogICAgc2NhbGVzOiBmdW5jdGlvbigpIHsKICAgICAgaWYoIXRoaXMucGFyc2VkQ2FzZXMpIHJldHVybiBudWxsCgogICAgICBsZXQgeURvbWFpbiA9IGQzLmV4dGVudCh0aGlzLnBhcnNlZENhc2VzLCBkPT5kW3RoaXMubWV0cmljXSkKICAgICAgbGV0IHhEb21haW4gPSBkMy5leHRlbnQodGhpcy5wYXJzZWRDYXNlcywgZD0+ZC5kYXRlKQogICAgICByZXR1cm4gewogICAgICAgIHg6IGQzLnNjYWxlVGltZSgpLmRvbWFpbih4RG9tYWluKS5yYW5nZShbdGhpcy5kaW1lbnNpb25zLmxlZnQsdGhpcy5kaW1lbnNpb25zLndpZHRoLXRoaXMuZGltZW5zaW9ucy5sZWZ0LXRoaXMuZGltZW5zaW9ucy5yaWdodF0pLAogICAgICAgIHk6IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKHlEb21haW4pLnJhbmdlKFt0aGlzLmRpbWVuc2lvbnMuaGVpZ2h0LXRoaXMuZGltZW5zaW9ucy5ib3R0b20tdGhpcy5kaW1lbnNpb25zLnRvcCx0aGlzLmRpbWVuc2lvbnMudG9wXSkKICAgICAgfQogICAgfSwKCiAgICBiZWVzd2FybTogZnVuY3Rpb24oKXsKICAgICAgaWYoIXRoaXMubWVtb3JpZXMpIHJldHVybiBudWxsCgoKICAgICAgbGV0IGZvcmNlID0gZDMuZm9yY2VTaW11bGF0aW9uKHRoaXMubWVtb3JpZXMpCiAgICAgICAvLy5mb3JjZSgnZm9yY2VYJywgZDMuZm9yY2VYKG1lbW9yeSA9PiB0aGlzLnNjYWxlcy54KHRoaXMucGFyc2VEYXRlKG1lbW9yeS5kYXRlKSkpLnN0cmVuZ3RoKC4xKSkKICAgICAgIC5mb3JjZSgnZm9yY2VYJywgZDMuZm9yY2VYKChtZW1vcnksaSkgPT4gdGhpcy5zY2FsZXMueCh0aGlzLnBhcnNlRGF0ZShtZW1vcnkuZGF0ZSkpKyAoLXRoaXMuZm9yY2VEaXN0YW5jZSArIChpJTIpKih0aGlzLmZvcmNlRGlzdGFuY2UgKiAyKSkgKS5zdHJlbmd0aCguMSkpCiAgICAgICAuZm9yY2UoJ2ZvcmNlWScsIGQzLmZvcmNlWSgobWVtb3J5LGkpID0+IHRoaXMuc2NhbGVzLnkobWVtb3J5LnZhbHVlKSArICgtdGhpcy5mb3JjZURpc3RhbmNlICsgKGklMikqKHRoaXMuZm9yY2VEaXN0YW5jZSAqIDIpKSkuc3RyZW5ndGgoLjEpKQogICAgICAgLmZvcmNlKCdjb2xsaWRlJywgZDMuZm9yY2VDb2xsaWRlKGQgPT4gZC53ZWlnaHQpKQogICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tZW1vcmllcy5sZW5ndGg7ICsraSkgewogICAgICAgZm9yY2UudGljaygpCiAgICAgfQogICAgIHJldHVybiBmb3JjZS5ub2RlcygpCgogICB9LAoKICAgIGxpbmU6IGZ1bmN0aW9uKCkgewogICAgICBpZighdGhpcy5jYXNlcyB8fCAhdGhpcy5zY2FsZXMpIHJldHVybiBmYWxzZQoKICAgICAgY29uc3QgbGluZUdlbmVyYXRvciA9IGQzLmxpbmUoKQogICAgICAgIC8vLmN1cnZlKGQzLmN1cnZlQmFzaXMpCiAgICAgICAgLngoZCA9PiB0aGlzLnNjYWxlcy54KGQuZGF0ZSkpCiAgICAgICAgLnkoZCA9PiB0aGlzLnNjYWxlcy55KGRbdGhpcy5tZXRyaWNdKSkKCiAgICByZXR1cm4gbGluZUdlbmVyYXRvcih0aGlzLnBhcnNlZENhc2VzKQoKICB9LAp9LAoKCiAgYXN5bmMgbW91bnRlZCgpIHsKICAgIHRoaXMubW91bnRlZCA9IHRydWU7CgoKCiAgICAvKnRoaXMuY291bnRyaWVzID0gKGF3YWl0IGdldENhc2VzU2VydmljZS5nZXRDb3VudHJpZXMoKSkuZGF0YS5tYXAoZSA9PiBlLmNvdW50cnkpCiAgICBsZXQgZm9ybWF0VGltZSA9IGQzLnRpbWVGb3JtYXQoIiVZLSVtLSVkIikKICAgIGxldCByZWFjdGlvbkFyciA9IFtdIC8vY3JlYXRlIHNhbXBsZSByZWFjdGlvbnMKICAgIGQzLnJhbmdlKDUwMDAwKS5mb3JFYWNoKCgpID0+IHsKICAgICAgbGV0IGRhdGUgPSB0aGlzLmdldFJhbmRvbURhdGUodGhpcy5zY2FsZXMueC5kb21haW4oKSkKICAgICAgcmVhY3Rpb25BcnIucHVzaCh7CiAgICAgICAgZGF0ZTogZm9ybWF0VGltZShkYXRlKSwKICAgICAgICB2YWx1ZTogdGhpcy5wYXJzZWRDYXNlcy5maW5kKGMgPT4gZm9ybWF0VGltZShjLmRhdGUpID09IGZvcm1hdFRpbWUoZGF0ZSkpW3RoaXMubWV0cmljXSwKICAgICAgICBjb21tZW50OiAiZm9vYmFyIiwKICAgICAgICB3ZWlnaHQ6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSozKzIpLAogICAgICAgIGNvdW50cnk6IHRoaXMuY291bnRyaWVzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSp0aGlzLmNvdW50cmllcy5sZW5ndGgpXSwKICAgICAgfSkKICAgIH0pCgogICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkocmVhY3Rpb25BcnIpKSovCiAgfSwKCiAgbWV0aG9kczogewogICAgZ2V0UmFuZG9tRGF0ZTogZnVuY3Rpb24oZXh0ZW50KSB7CiAgICAgIGxldCBkYXRlID0gbmV3IERhdGUoZXh0ZW50WzBdLmdldFRpbWUoKSArIE1hdGgucmFuZG9tKCkgKiAoZXh0ZW50WzFdLmdldFRpbWUoKSAtIGV4dGVudFswXS5nZXRUaW1lKCkpKQogICAgICBkYXRlLnNldEhvdXJzKDAsMCwwKQogICAgICByZXR1cm4gZGF0ZQogICAgfSwKCiAgICBob3ZlcjogZnVuY3Rpb24ocmVhY3Rpb24sZXZlbnQpIHsKICAgICAgbGV0IHIgPSAxMAogICAgICBsZXQgb3BhY2l0eSA9IDEKICAgICAgaWYoZXZlbnQudHlwZSA9PSAnbW91c2VvdXQnKSB7CiAgICAgICAgciA9IHJlYWN0aW9uLndlaWdodAogICAgICAgIG9wYWNpdHkgPSB0aGlzLm9wYWNpdHkKICAgICAgfQogICAgICBkMy5zZWxlY3QoZXZlbnQudGFyZ2V0KS50cmFuc2l0aW9uKCI1MCIpLmF0dHIoInIiLHIpLmF0dHIoIm9wYWNpdHkiLG9wYWNpdHkpCiAgICB9CgogIH0KfQo="},{"version":3,"sources":["vis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"vis.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <svg :width=\"dimensions.width\" :height=\"dimensions.height\" v-if=\"mounted\">\n\n      <path\n        :d=\"line\"\n        stroke-width=\"3\"\n        fill=\"none\"\n        stroke=\"black\"/>\n\n    <g class=\"memories\" v-if=\"beeswarm\" transform=\"translate(0,0)\">\n      <circle\n        v-for=\"memory, j in beeswarm\"\n        :key=\"j\"\n        :cx=\"memory.x\"\n        :cy=\"memory.y\"\n        :opacity=\"opacity\"\n        :r=\"memory.weight\"\n        fill=\"#FA5E2D\"\n        @mouseover=\"hover(memory,$event)\"\n        @mouseout=\"hover(memory,$event)\" />\n    </g>\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n  data () {\n    return {\n      parseDate: d3.utcParse(\"%Y-%m-%d\"),\n      mounted: false,\n      opacity: 0.7,\n      forceDistance: 6\n    }\n  },\n\n  props: {\n    dimensions: Object,\n    cases: Array,\n    metric: String,\n    memories: Array\n  },\n\n  computed: {\n    parsedCases: function() {\n      return this.cases.map(c => {\n        return {\n          date: this.parseDate(c.d),\n          relative: c.r,\n          cumulative: c.c,\n          new: c.n\n        }\n      })\n    },\n\n    scales: function() {\n      if(!this.parsedCases) return null\n\n      let yDomain = d3.extent(this.parsedCases, d=>d[this.metric])\n      let xDomain = d3.extent(this.parsedCases, d=>d.date)\n      return {\n        x: d3.scaleTime().domain(xDomain).range([this.dimensions.left,this.dimensions.width-this.dimensions.left-this.dimensions.right]),\n        y: d3.scaleLinear().domain(yDomain).range([this.dimensions.height-this.dimensions.bottom-this.dimensions.top,this.dimensions.top])\n      }\n    },\n\n    beeswarm: function(){\n      if(!this.memories) return null\n\n\n      let force = d3.forceSimulation(this.memories)\n       //.force('forceX', d3.forceX(memory => this.scales.x(this.parseDate(memory.date))).strength(.1))\n       .force('forceX', d3.forceX((memory,i) => this.scales.x(this.parseDate(memory.date))+ (-this.forceDistance + (i%2)*(this.forceDistance * 2)) ).strength(.1))\n       .force('forceY', d3.forceY((memory,i) => this.scales.y(memory.value) + (-this.forceDistance + (i%2)*(this.forceDistance * 2))).strength(.1))\n       .force('collide', d3.forceCollide(d => d.weight))\n     for (let i = 0; i < this.memories.length; ++i) {\n       force.tick()\n     }\n     return force.nodes()\n\n   },\n\n    line: function() {\n      if(!this.cases || !this.scales) return false\n\n      const lineGenerator = d3.line()\n        //.curve(d3.curveBasis)\n        .x(d => this.scales.x(d.date))\n        .y(d => this.scales.y(d[this.metric]))\n\n    return lineGenerator(this.parsedCases)\n\n  },\n},\n\n\n  async mounted() {\n    this.mounted = true;\n\n\n\n    /*this.countries = (await getCasesService.getCountries()).data.map(e => e.country)\n    let formatTime = d3.timeFormat(\"%Y-%m-%d\")\n    let reactionArr = [] //create sample reactions\n    d3.range(50000).forEach(() => {\n      let date = this.getRandomDate(this.scales.x.domain())\n      reactionArr.push({\n        date: formatTime(date),\n        value: this.parsedCases.find(c => formatTime(c.date) == formatTime(date))[this.metric],\n        comment: \"foobar\",\n        weight: Math.floor(Math.random()*3+2),\n        country: this.countries[Math.floor(Math.random()*this.countries.length)],\n      })\n    })\n\n    console.log(JSON.stringify(reactionArr))*/\n  },\n\n  methods: {\n    getRandomDate: function(extent) {\n      let date = new Date(extent[0].getTime() + Math.random() * (extent[1].getTime() - extent[0].getTime()))\n      date.setHours(0,0,0)\n      return date\n    },\n\n    hover: function(reaction,event) {\n      let r = 10\n      let opacity = 1\n      if(event.type == 'mouseout') {\n        r = reaction.weight\n        opacity = this.opacity\n      }\n      d3.select(event.target).transition(\"50\").attr(\"r\",r).attr(\"opacity\",opacity)\n    }\n\n  }\n}\n</script>\n\n<style scoped></style>\n"]}]}