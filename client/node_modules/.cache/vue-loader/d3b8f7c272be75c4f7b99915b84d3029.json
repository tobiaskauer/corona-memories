{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/App.vue","mtime":1613594144743},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8qQGltcG9ydCB1cmwoJ2h0dHBzOi8vc3RhY2twYXRoLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzQuMy4xL2Nzcy9ib290c3RyYXAubWluLmNzcycpOyovCgoud3JhcHBlciB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIC8vYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KDgzLjE3JSA4My4xNyUgYXQgMTguMzclIDE2LjgzJSwgIzIwQ0I4NiAwJSwgIzE1QjVCNSAxMDAlKTsvKiBSZWN0YW5nbGUgMjM3ICovCiAgLy9iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTIxLjA5ZGVnLCAjNjQwMzNEIDE2LjU4JSwgIzEwMDUzMCA4Mi43NCUpOwp9CgojYXBwIHsKICBtaW4taGVpZ2h0OiAxMDAlOwogIGhlaWdodDogMTAwJQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <v-select\n        v-if=\"countries\"\n        :items=\"countries\"\n        v-model=\"currentCountry\"\n        label=\"Country\"\n        ></v-select>\n    <memoryForm />\n    <vis\n      v-if=\"cases\"\n      :dimensions=\"dimensions\"\n      metric=\"relative\"\n      :cases=\"cases\"\n      :memories=\"memories\"\n      />\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport caseService from '@/services/caseService'\nimport memoryService from '@/services/memoryService'\n\nimport memoryForm from './components/memoryForm'\nimport vis from './components/vis'\n\nexport default {\n  name: 'App',\n  components: {\n    memoryForm,\n    vis\n  },\n\n  data () {\n    return {\n      mounted: false,\n      dimensions: {width: 1000, height: 1000, top: 50, right: 50, bottom: 50, left: 50},\n      cases: null,\n      items: [{name: \"foo\"}, {name: 'bar'}],\n      memories: null,\n      countries: null,\n      currentCountry: \"Belgium\"\n    }\n  },\n\n  computed: {\n    test: function() {\n      return caseService.getCases({country: this.currentCountry})\n    }\n  },\n\n  created() {\n    window.addEventListener(\"resize\", this.resize);\n  },\n\n  async  mounted () {\n    this.cases = (await caseService.getCases({country: this.currentCountry})).data\n    this.memories = (await memoryService.getMemories({country: this.currentCountry})).data\n    this.countries = (await caseService.getCountries()).data.map(e => e.country)\n\n    //this.$store.dispatch('setCountry',\"Germany\")\n    this.$nextTick(() => {\n      this.resize()\n      this.mounted = true;\n    })\n\n    console.log(this.test)\n\n },\n\n  methods: {\n    resize: function() {\n      this.dimensions.width = window.innerWidth\n      this.dimensions.height = window.innerHeight\n    },\n\n\n\n  }\n}\n</script>\n\n<style>\n/*@import url('https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css');*/\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n  //background: radial-gradient(83.17% 83.17% at 18.37% 16.83%, #20CB86 0%, #15B5B5 100%);/* Rectangle 237 */\n  //background: linear-gradient(121.09deg, #64033D 16.58%, #100530 82.74%);\n}\n\n#app {\n  min-height: 100%;\n  height: 100%\n}\n</style>\n"]}]}