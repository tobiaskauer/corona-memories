{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/vis.vue?vue&type=style&index=0&id=91b57380&scoped=true&lang=css&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/vis.vue","mtime":1613584510919},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhpZGRlbi0wLCAuaGlkZGVuLTEsIC5oaWRkZW4tMiB7CiAgZmlsbC1vcGFjaXR5OiAuMjsKICBzdHJva2Utb3BhY2l0eTogLjU7Cn0KLmhpZGRlbi0wIHtmaWx0ZXI6IHVybCgnI2YwJyl9Ci5oaWRkZW4tMSB7ZmlsdGVyOiB1cmwoJyNmMScpfQouaGlkZGVuLTIge2ZpbHRlcjogdXJsKCcjZjInKX0KCnBhdGggewogIGZpbGw6IG5vbmU7CiAgc3Ryb2tlOiBibGFjazsKfQo="},{"version":3,"sources":["vis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"vis.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <svg :width=\"dimensions.width\" :height=\"dimensions.height\" v-if=\"mounted\">\n\n      <path\n        :d=\"line\"\n        stroke-width=\"3\" />\n\n    <!--<g class=\"reactions\" v-if=\"reactions\" transform=\"translate(0,0)\">\n      <circle\n        v-for=\"reaction, j in reactions\"\n        :key=\"j\" :cx=\"reaction.x\"\n        :cy=\"reaction.y\"\n        :opacity=\"opacity\"\n        :class=\"(reaction.country == currentCountry) ? 'active' : 'hidden-1'\"\n        :r=\"reaction.weight\"\n        fill=\"#FA5E2D\"\n        @mouseover=\"hover(reaction,$event)\"\n        @mouseout=\"hover(reaction,$event)\" />\n    </g>-->\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nexport default {\n  data () {\n    return {\n      parseDate: d3.utcParse(\"%Y-%m-%d\"),\n      currentCountry: 'Germany',\n      mounted: false,\n      opacity: .7,\n      error: null,\n      csv: null,\n    }\n  },\n\n  props: {\n    dimensions: Object,\n    cases: Array,\n    metric: String\n  },\n\n  computed: {\n    parsedCases: function() {\n      return this.cases.map(c => {\n        return {\n          date: this.parseDate(c.d),\n          relative: c.r,\n          cumulative: c.c,\n          new: c.n\n        }\n      })\n    },\n\n    scales: function() {\n      if(!this.parsedCases) return null\n\n      let yDomain = d3.extent(this.parsedCases, d=>d[this.metric])\n      let xDomain = d3.extent(this.parsedCases, d=>d.date)\n      return {\n        x: d3.scaleTime().domain(xDomain).range([this.dimensions.left,this.dimensions.width-this.dimensions.left-this.dimensions.right]),\n        y: d3.scaleLinear().domain(yDomain).range([this.dimensions.height-this.dimensions.bottom-this.dimensions.top,this.dimensions.top])\n      }\n    },\n\n    /*reactions: function(){\n\n\n\n      let force = d3.forceSimulation(reactionArr)\n       .force('forceX', d3.forceX(reaction => this.scales.x(reaction.date)).strength(.1))\n       .force('forceY', d3.forceY((reaction,i) => this.scales.y(reaction.value) + (-8 + (i%2)*16)).strength(.1))\n       .force('collide', d3.forceCollide(d => d.weight))\n     for (let i = 0; i < reactionArr.length; ++i) {\n       force.tick()\n     }\n     return force.nodes()\n\n   },*/\n\n    line: function() {\n      if(!this.cases || !this.scales) return false\n\n      const lineGenerator = d3.line()\n        //.curve(d3.curveBasis)\n        .x(d => this.scales.x(d.date))\n        .y(d => this.scales.y(d[this.metric]))\n\n    return lineGenerator(this.parsedCases)\n\n  },\n},\n\n\n  mounted() {\n    this.mounted = true;\n\n    let formatTime = d3.timeFormat(\"%m/%d/%y\")\n    let reactionArr = [] //create sample reactions\n    d3.range(300).forEach(() => {\n      let date = this.getRandomDate(this.scales.x.domain())\n      reactionArr.push({\n        date: date,\n        value: this.parsedCases.find(c => formatTime(c.date) == formatTime(date))[this.metric],\n        comment: \"foobar\",\n        weight: Math.floor(Math.random()*3+2),\n        //country: country,\n      })\n    })\n\n    console.log(reactionArr)\n  },\n\n  methods: {\n    getRandomDate: function(extent) {\n      let date = new Date(extent[0].getTime() + Math.random() * (extent[1].getTime() - extent[0].getTime()))\n      date.setHours(0,0,0)\n      return date\n    },\n\n    hover: function(reaction,event) {\n      let r = 10\n      let opacity = 1\n      if(event.type == 'mouseout') {\n        r = reaction.weight\n        opacity = this.opacity\n      }\n      d3.select(event.target).transition(\"50\").attr(\"r\",r).attr(\"opacity\",opacity)\n    }\n\n  }\n}\n</script>\n\n<style scoped>\n.hidden-0, .hidden-1, .hidden-2 {\n  fill-opacity: .2;\n  stroke-opacity: .5;\n}\n.hidden-0 {filter: url('#f0')}\n.hidden-1 {filter: url('#f1')}\n.hidden-2 {filter: url('#f2')}\n\npath {\n  fill: none;\n  stroke: black;\n}\n</style>\n"]}]}