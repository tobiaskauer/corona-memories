{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/vis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/vis.vue","mtime":1614789230506},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"vis.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <svg :width=\"options.dimensions.width\" :height=\"options.dimensions.height\" v-if=\"mounted\" z-index=\"5\">\n    \n    <filter id=\"blurMe\">\n      <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"1\" />\n    </filter>\n    \n    <g class=\"axis xAxis\" v-axis:x=\"scales\" :transform=\"`translate(0,${options.dimensions.height-options.dimensions.top-options.dimensions.bottom+10})`\"></g>\n    <g class=\"axis yAxis\" v-axis:y=\"scales\" :transform=\"`translate(${options.dimensions.width-options.dimensions.right})`\"></g>\n\n    <path\n      :d=\"caseLine\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\" \n      fill=\"none\"\n      stroke=\"black\"/>\n\n    <g class=\"memories\"  transform=\"translate(0,0)\"> <!-- can go to component, actually.... -->\n      <g v-if=\"beeswarm\">\n        <g v-for=\"memory, j in beeswarm.filter((e,i) => i <= options.progress)\" :key=\"j\">\n          <circle\n            :cx=\"memory.x\"\n            :cy=\"memory.y\"\n            :opacity=\"opacity\"\n            :r=\"memory.weight\"\n            fill=\"#FA5E2D\"\n            :filter=\"(options.overlay) ? 'url(#blurMe)' : ''\"\n\n            @click=\"$emit('showMemory',memory)\"\n            @mouseover=\"hover(memory,$event)\"\n            @mouseout=\"hover(memory,$event)\" />\n\n          <!--<text\n            :x=\"memory.x\"\n            :y=\"memory.y\"\n           fill=\"#FA5E2D\"\n            @click=\"$emit('showMemory',memory)\"\n            @mouseover=\"hover(memory,$event)\"\n            @mouseout=\"hover(memory,$event)\">{{memory.comment}}\n            </text>-->\n        </g> <!-- circleMemories </g>-->\n      </g>\n\n      <!--<g v-for=\"(memory, k) in lineMemories\" :key=\"'line-'+k\" >\n        <path v-if=\"memory.path\" stroke-linecap=\"round\" :opacity=\"opacity\" stroke-dasharray=\"1 5\" stroke-width=\"2\" :d=\"memory.path\" stroke=\"#FA5E2D\" fill=\"none\" />\n      </g>-->\n    </g>\n\n        \n\n  \n\n    <!--<g class=\"dateSelector\" @click=\"$emit('showForm', formatDate(newMemory.date))\" v-if=\"dateSelector\">-->\n    <g class=\"dateSelector\" v-if=\"dateSelector\"> <!-- can go to own component -->\n      <circle r=\"25\" cx=\"0\" cy=\"0\" fill=\"#FA5E2D\"  :transform=\"`translate(${newMemory.circle.x},${newMemory.circle.y})`\" />\n      <!--<path d=\"M6 0H9V6H15V9H9V15H6V9H0V6H6V0Z\" fill=\"white\" transform=\"translate(-7,-15)\" />-->\n      <text v-if=\"newMemory.date\" fill=\"white\" font-size=\"10px\"  :transform=\"`translate(${newMemory.circle.x},${newMemory.circle.y})`\" text-anchor=\"middle\">{{shortFormatDate(newMemory.startDate)}}</text>\n      <!--<path v-if=\"newMemory.line\" :d=\"newMemory.line\" stroke=\"#FA5E2D\" fill=\"none\" stroke-width=\"8\" />-->\n    </g>\n\n    <g class=\"overlay\" v-if=\"options.overlay\">\n      <rect x=\"0\" y=\"0\" :width=\"options.dimensions.width\" :height=\"options.dimensions.height\" fill=\"black\" opacity=\".5\" pointer-events=\"none\"/>\n      <g v-if=\"currentMemory\">\n\n        <circle\n          r=20\n          :cx=\"currentMemory.x\"\n          :cy=\"currentMemory.y\"\n          fill=\"#FA5E2D\" />\n\n        <path\n          :d=\"currentMemory.connector\"\n          stroke-width=\"2\"\n          fill=\"none\"\n          stroke=\"#FA5E2D\"/>\n\n      </g>\n    </g>\n  </svg>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport * as d3 from 'd3'\n\nexport default {\n  data () {\n    return {\n      parseDate: d3.utcParse(\"%Y-%m-%d\"),\n      formatDate: d3.timeFormat(\"%Y-%m-%d\"),\n      shortFormatDate: d3.timeFormat(\"%b %d\"),\n      lineGenerator: d3.line().x(d => d.x).y(d => d.y).curve(d3.curveBasis),\n      mounted: false,\n      mouseDown: false,\n      opacity: 0.7, //circle opacity when not hovered\n      forceDistance: 5, //distance of reactions to line\n      linePosition: [0,0], //x and y of line overlay to add new memories\n      currentMemory: null, //when currently displaying a memory, pick the right one to highlight\n      newMemory: {\n        startDate: null,\n        endDate: null,\n        show: false,\n        circle: {x: 0, y: 0},\n        line: false,\n      },\n    }\n  },\n\n  props: {\n    options: Object,\n    //dimensions: Object,\n    cases: Array,\n    memories: Array,\n    dateSelector: Boolean,\n    //overlay: Boolean,\n\n  },\n\n  computed: {\n    parsedCases: function() {\n      return this.cases.map((c,i) => {\n        return {\n          dateString: c.d,\n          date: this.parseDate(c.d),\n          value: c.v,\n          slope: (i>5) ? c.v - this.cases[i-6].v : 0 //helps computing the beeswarm's distance\n        }\n      })\n    },\n\n    scales: function() {\n      if(!this.parsedCases) return null\n\n      let yDomain = [0,d3.max([50,d3.max(this.parsedCases, d=>d.value)])] //minimum of 50 cases to have a somewhat consistent layout\n      let xDomain = d3.extent(this.parsedCases, d=>d.date)\n\n      let x = d3.scaleTime().domain(xDomain).range([this.options.dimensions.left,this.options.dimensions.width-this.options.dimensions.right])\n      let y = d3.scaleLinear().domain(yDomain).range([this.options.dimensions.height-this.options.dimensions.bottom-this.options.dimensions.top,this.options.dimensions.top])\n     \n      \n      return {x: x, y: y}\n    },\n\n    caseLine: function() {\n      if(!this.scales) return false\n\n      let arr = this.parsedCases.map(c => { \n        c.x = this.scales.x(c.date)\n        c.y = this.scales.y(c.value)\n        return c;\n      })\n    return this.lineGenerator(arr)\n  },\n\n    circleMemories: function() {\n      if(!this.memories && !this.scales) return null\n      let arr = this.memories\n      let slopeDomain = d3.extent(this.parsedCases, d=>d.slope)\n\n      if(arr && arr.length > 0) { //compute x/y coordinates for all memories (before turning them into a beeswarm)\n        //arr = arr.filter(memory => memory.date == memory.enddate) //only get memories that are only one day long\n        arr.forEach((memory,i)=> {\n          let slope = this.getLineElement(memory.date).slope\n          let maxSlope = slope >= 0 ? slopeDomain[1] : slopeDomain [0] //if slope is negative, use negativ max to compute distance\n          let sign = (i%2) ? -1 : 1 //split into a line above and one below\n          let changeY = sign * (Math.abs(maxSlope) -  Math.abs(slope)) * .15 //change on y axis decreases as slope gets higher\n          let changeX = sign * (maxSlope  - slope) * .15 //change on y axis decreases as slope gets higher\n          memory.y = this.scales.y(this.getLineElement(memory.date).value) + changeY\n          memory.x = this.scales.x(this.parseDate(memory.date)) + changeX\n        })\n      }\n      return arr\n    },\n\n    /*lineMemories: function() {\n      if(!this.memories && !this.scales) {console.log(this.memories,this.scales); return null} \n      let arr = this.memories\n      if(arr.length > 0) {\n        arr = arr.filter(memory => memory.date != memory.enddate)\n        arr.forEach((memory,i)=> {\n          let segment = this.getLineSegment(memory.date,memory.enddate)\n          if(segment.length > 0) segment.forEach(s => s.y = s.y - 5) \n          if(i==1)console.log(segment,this.lineGenerator(segment))\n          memory.path = this.lineGenerator(segment)\n        })\n      }\n      return arr\n    },*/\n\n\n    \n  beeswarm: function(){\n    if(!this.circleMemories) return null\n    let force = d3.forceSimulation(this.circleMemories)\n      .force('forceX', d3.forceX(memory => memory.x).strength(.1))\n      .force('forceY', d3.forceY(memory => memory.y).strength(.1))\n      .force('collide', d3.forceCollide(d => d.weight + .5))\n    for (let i = 0; i < 100; ++i) {\n      force.tick()\n    }\n    return force.nodes()\n  },\n},\n\nwatch: {\n  beeswarm: function(arr) { //show circle on overlay after beeswarm changed\n    let c = arr.filter(e=>e.active)[0]\n    if(c) {\n      this.currentMemory = c\n       this.currentMemory.connector = `\n        M${c.x} ${c.y}\n        Q${(this.options.dimensions.width/2)} ${c.y}\n        ${(this.options.dimensions.width/2)} ${(this.options.dimensions.height/2)}`;\n    }\n  }\n},\n\n\n  async mounted() {\n    this.mounted = true;\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('mousedown', this.onMouseDown)\n    document.addEventListener('mouseup', this.onMouseUp)\n  },\n\n  methods: {\n    hover: function(memory,event) { //hovering circles\n      if(!this.dateSelector) {  //disable hover when memory adding is in progress\n        let r = 10\n        let opacity = 1\n        if(event.type == 'mouseout') {\n          r = memory.weight\n          opacity = this.opacity\n       }\n       d3.select(event.target).transition(\"50\").attr(\"r\",r).attr(\"opacity\",opacity)\n      }\n    },\n\n    getLineElement: function(dateString) {\n      let valueOnMemoryDate = this.parsedCases.find(c => dateString == c.dateString)\n      return valueOnMemoryDate ? valueOnMemoryDate : null\n    },\n\n    \n\n\n    getLineSegment: function(startDate,endDate) {\n      startDate = (typeof startDate === 'string') ? this.parseDate(startDate) : startDate\n      endDate = (typeof endDate === 'string') ? this.parseDate(endDate) : endDate\n      let segment = this.parsedCases.filter(c => //get parts of the caseLine that match current dates\n            (c.date < endDate && c.date > startDate) //forward movement\n            || (c.date > endDate && c.date < startDate) //backward movement\n          )\n      return segment\n    },\n\n    \n\n    \n\n    onMouseMove: function(event) { //follow line\n      if(this.dateSelector) {\n        let endDate = this.scales.x.invert(event.clientX)\n        let dateString = this.formatDate(endDate)\n        let value = this.scales.y(this.getLineElement(dateString).value)\n\n        if(this.mouseDown) { //if mouse if pressed\n          let arr = this.getLineSegment(this.newMemory.startDate,endDate)\n          Vue.set(this.newMemory,'line', this.lineGenerator(arr)) //create svg Line\n        }\n        Vue.set(this.newMemory.circle,'x',event.clientX) //also move circle\n        Vue.set(this.newMemory.circle,'y',value)\n      }\n    },\n\n    onMouseDown: function(event) { //follow line\n      if(this.dateSelector) {\n        this.mouseDown = true\n        let exactDate = this.scales.x.invert(event.clientX)\n        Vue.set(this.newMemory,'startDate',exactDate)\n      }\n    },\n\n    onMouseUp: function(event) { //follow line\n      if(this.dateSelector) {\n        this.mouseDown = false\n        let exactDate = this.scales.x.invert(event.clientX)\n        exactDate\n        \n      }\n    },\n\n\n  },\n\n  directives: { //axis computation\n    axis(el, binding) {\n      let axis = d3.select(el)\n      switch(binding.arg) {\n        case \"x\":\n          axis.call(d3\n            .axisBottom(binding.value.x)\n            .ticks(d3.timeMonth)\n            .tickFormat(d3.timeFormat(\"%b\"))\n          );\n          axis.selectAll(\".domain\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick line\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick text\")\n            .style(\"text-anchor\", \"end\")\n            .style(\"text-transform\", \"UPPERCASE\")\n            .style(\"opacity\", .3)\n          break;\n        case \"y\":\n          axis.call(d3\n            .axisRight(binding.value.y)\n            .tickSize(-1000)\n            .ticks(5)\n          );\n          axis.selectAll(\".domain\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick line\").attr(\"opacity\",.05)\n          axis.selectAll(\".tick text\").attr(\"opacity\",.3)\n          break;\n      }\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}