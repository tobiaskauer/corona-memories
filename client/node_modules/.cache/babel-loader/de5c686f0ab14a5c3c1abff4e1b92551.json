{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/App.vue","mtime":1614963488944},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <template v-if=\"cases && memories && countries && mounted\">\n    <h1>corona<br /><span>memories</span></h1>\n    <Scrollama\n      class=\"scrollama\"\n      :progress=\"true\"\n      @step-enter=\"stepEnterHandler\"\n      @step-progress=\"stepProgressHandler\"\n    >\n      <div slot=\"graphic\" class=\"visWrapper\">\n        <vis\n          :cases=\"cases\"\n          :memories=\"memories\"\n          :options=\"visOptions\"\n          :country=\"currentCountry\"\n          :datePicker=\"newMemory.datepicker\"\n          @toggleForm=\"toggleForm($event)\"\n          @showMemory=\"showMemory\" />\n      </div>\n\n        <div class=\"introWrapper\" data-step=\"1\">  \n          <p class=\"larger\"> Numbers do not tell stories. <strong>People do.</strong></p>\n          <p>Since the start of the pandemic <counter /> days ago, we are confronted with charts about new cases or even deaths. What are the human stories behind the numbers?</p>\n          <p class=\"smaller\">The research is conducted by Tobias Kauer (University of Edinburgh), Benjamin Bach (University of Edinburgh), and Marian Dörk (Potsdam University of Applied Sciences). It has been granted approval by the ethics committee. By clicking the button, you indicate that you are a speaker of English and at least 18 years old. You read the information letter and you voluntarily agree to  participate, and understand you can stop your participation at any time. You agree that your anonymous data may be kept permanently in Edinburgh University archived and may be used by qualified researchers for teaching and research purposes.</p>\n            <v-btn color=\"primary\" outlined @click=\"giveConsent\">\n              <v-icon small>mdi-check-circle</v-icon>\n             I agree, show me\n            </v-btn>\n        </div>\n\n        <div class=\"animatorWrapper\" data-step=\"2\"></div>\n\n        <div v-if=\"consent\" id=\"target\" class=\"explorationWrapper\" data-step=\"3\">\n          <p><strong>What's the day the pandemic changed your life?</strong></p>\n          <v-btn color=\"primary\" outlined elevation=\"2\" @click=\"toggleDatepicker\">\n            <template v-if=\"!newMemory.datepicker\">\n              <v-icon small>mdi-tooltip-plus-outline</v-icon>Add a story to the curve\n            </template>\n            <template v-else>\n              <v-icon small>mdi-close-circle-outline</v-icon>Stop adding\n            </template>\n          </v-btn>\n          <p v-if=\"newMemory.datepicker\">click on the line to choose a date</p>\n          <hr style=\"color: #FA5E2D; margin: 20px 0; height: 1px;\" />\n          <v-select\n            :items=\"countries\"\n            v-model=\"currentCountry\"\n            label=\"Your country\"\n            outlined />\n        </div>\n\n      <div class=\"formWrapper\" v-if=\"newMemory.showForm\">\n        <memoryForm\n          :date=\"newMemory.date\"\n          :country=\"currentCountry\"\n          @close=\"toggleForm(false)\"/>\n      </div>\n      <div class=\"memoryWrapper\" v-if=\"displayMemory.display\">\n        <memoryDisplay\n          :memory=\"displayMemory.memory\"\n          @close=\"showMemory(false)\"/>\n      </div>\n    </Scrollama>\n    </template>\n    <template v-else>\n      <v-card class=\"d-flex justify-center mb-6\" color=\"rgb(255, 0, 0, 0.0)\" elevation=\"0\" style=\"margin-top: 100px;\">\n        <v-progress-circular\n        :size=\"300\"\n        indeterminate\n        color=\"primary\"\n        >Loading ...<br />try refresing?</v-progress-circular>\n      </v-card>\n      </template>\n  </v-app>\n</template>\n\n<script>\n//get packages\nimport Vue from 'vue'\nimport AsyncComputed from 'vue-async-computed'\nVue.use(AsyncComputed)\nimport 'intersection-observer' // for cross-browser support\nimport Scrollama from 'vue-scrollama'\n\n//get services for API connectivity\nimport caseService from '@/services/caseService'\nimport memoryService from '@/services/memoryService'\n\n//get components\nimport memoryForm from './components/memoryForm'\nimport memoryDisplay from './components/memoryDisplay'\nimport counter from './components/counter'\nimport vis from './components/vis'\n\nexport default {\n  name: 'App',\n  components: {\n    Scrollama,\n    memoryForm,\n    memoryDisplay,\n    counter,\n    vis\n  },\n\n  data () {\n    return {\n      mounted: false,\n      consent: true, //only start recording after people consent\n      countries: null, \n      currentCountry: \"Germany\",      \n\n      visOptions: {\n        dimensions: {width: 0, height: 0, top: 20, right: 50, bottom: 50, left: 50},\n        progess: 0,\n        overlay: false,\n        displayMemory: false\n      },\n\n      displayMemory: {\n        display: false,\n      },\n      newMemory: {\n        datepicker: false, //show circle (formerly line) that adds new dot\n        showForm: false, //show form after clicking the dot\n        date: \"\" //is set when hovering line and passed to memory form\n        //date: \"2020-02-23\" //to quicker test form\n      }\n    }\n  },\n\n  asyncComputed: {\n    async cases() {\n      console.log((await caseService.getCases({country: this.currentCountry, metric: \"relative_cases\"})).data)\n      return (await caseService.getCases({country: this.currentCountry, metric: \"relative_cases\"})).data\n    },\n    async memories() {\n      return (await memoryService.getMemories({country: this.currentCountry})).data\n    }\n  },\n\n  created() {\n    window.addEventListener(\"resize\", this.resize);\n  },\n\n  async mounted () {\n    this.countries = (await caseService.getCountries()).data.map(e => e.country)\n    this.$nextTick(() => {\n      this.resize()\n      this.mounted = true;\n    })\n },\n\n  methods: {\n    resize: function() {\n      Vue.set(this.visOptions.dimensions,'width',window.innerWidth)\n      Vue.set(this.visOptions.dimensions,'height',window.innerHeight)\n    },\n\n    giveConsent: function() {\n      this.consent = true\n      this.$nextTick(() => {\n        this.$vuetify.goTo(\"#target\", {duration: 2000});\n      });\n    },\n\n    showMemory: function(memory) {\n      if(memory) {\n        Vue.set(this.memories[this.memories.findIndex(e => e.id == memory.id)],'active',true)\n        Vue.set(this.displayMemory,'memory',memory)\n        Vue.set(this.displayMemory,'display',true)\n        this.overlay = true\n      } else {\n        Vue.set(this.displayMemory,'display',false)\n        Vue.set(this.memories[this.memories.findIndex(e => e.active)],'active',false)\n        this.overlay = false\n      }\n    },\n\n    stepEnterHandler({element, direction}) {\n      direction //maybe we need this later\n      switch(element.className) {\n        case \"introWrapper\": \n           Vue.set(this.visOptions,'progress',0)\n          break\n      }\n      //this.currStepId = element.dataset.stepId\n    },\n\n    stepProgressHandler({element, progress}) {\n      if(element.className == \"animatorWrapper\" && this.consent) {\n        let showElementsNumber = Math.ceil(progress * this.memories.length)\n        Vue.set(this.visOptions,'progress',showElementsNumber)\n      }\n    },\n\n    toggleDatepicker: function() {\n      let bool = !this.newMemory.datepicker\n      Vue.set(this.newMemory,'datepicker',bool)\n    },\n\n    toggleForm: function(date) { //using an own method instead of inline assignment to stay sane\n      console.log(date)\n      if(date) {\n        Vue.set(this.newMemory,'date',date)\n        Vue.set(this.newMemory,'datepicker',false)\n        Vue.set(this.newMemory,'showForm',true)\n        this.overlay = true\n      } else {\n        Vue.set(this.newMemory,'showForm',false)\n        this.overlay = false\n      }\n    }\n  }\n}\n</script>\n\n<style src=\"vue-scrollama/dist/vue-scrollama.css\"></style>\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@400;900&display=swap');\n\n.introWrapper, .explorationWrapper, .animatorWrapper  {\n  //border: 1px dotted black;\n  height: 100vh;\n  padding-top: 150px;\n}\n\n.scrollama {\n  width: 40%;\n  padding: 0 0px 50px 30px;\n  min-width: 200px;\n  max-width: 400px;\n  font-family: 'Roboto Slab', serif;\n  pointer-events: none;\n}\n\nbutton, .v-input {\n  pointer-events: all;\n}\n\nh1{\n  margin: 50px 0 0 30px;\n  height: 100px;\n  position: fixed;\n  font-family: 'Roboto Slab', serif;\n  font-weight: 400;\n  font-size: 40px;\n  color: #FA5E2D;\n  line-height: 30px;\n}\n\nh1 span{\n  font-weight: 900;\n}\n\np {\n  font-family: 'Roboto Slab', serif;\n  font-weight: 400;\n}\n\np.larger {\n  font-size: 1.2em;\n}\n\np.smaller {\n  color: rgba(0,0,0,.5);\n  font-size: 9px;\n  line-height: 10px;\n}\n\n.visWrapper {\n  position: fixed;\n  width: 100%;\n  left: 0;\n  height: 100%;\n  pointer-events: all;\n}\n\n\n#app {\n  background: #FFEBC6;\n  min-height: 100%;\n  height: 100%;\n}\n</style>\n"],"sourceRoot":"src"}]}