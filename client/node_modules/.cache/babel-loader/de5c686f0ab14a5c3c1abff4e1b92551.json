{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/App.vue","mtime":1615484721207},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <template v-if=\"cases && memories && countries && mounted\">\n    \n    <Scrollama\n      class=\"scrollama\"\n      :progress=\"true\"\n      @step-enter=\"stepEnterHandler\"\n      @step-progress=\"stepProgressHandler\"\n    >\n\n      <!-- display intro-text and consent form -->\n      <div slot=\"graphic\" class=\"visWrapper\"> \n        <vis\n          :cases=\"cases\"\n          :memories=\"memories\"\n          :options=\"visOptions\"\n          :country=\"currentCountry\"\n          :datePicker=\"newMemory.datepicker\"\n          :hashtag=\"activeHashtag\"\n          @toggleForm=\"toggleForm($event)\"\n          @showMemory=\"showMemory\" />\n      </div>\n\n        <div class=\"introWrapper\" data-step=\"1\">  \n          <h1>corona<br /><span>memories</span></h1>\n          <p class=\"larger\"> Numbers do not tell stories. <strong>People do.</strong></p>\n          <p>Since the start of the pandemic <counter /> days ago, we are confronted with charts about new cases or even deaths. What are the human stories behind the numbers?</p>\n          <p class=\"smaller\">The research is conducted by Tobias Kauer (University of Edinburgh), Benjamin Bach (University of Edinburgh), and Marian Dörk (Potsdam University of Applied Sciences). It has been granted approval by the ethics committee. By clicking the button, you indicate that you are a speaker of English and at least 18 years old. You read the information letter and you voluntarily agree to  participate, and understand you can stop your participation at any time. You agree that your anonymous data may be kept permanently in Edinburgh University archived and may be used by qualified researchers for teaching and research purposes.</p>\n            <v-btn color=\"primary\" outlined @click=\"giveConsent\">\n              <v-icon small>mdi-check-circle</v-icon>\n             I agree, show me\n            </v-btn>\n        </div>\n\n        <!-- wrapper that controls progress of appearing memory bubbles -->\n        <div class=\"animatorWrapper\" data-step=\"2\"></div> \n\n        <!-- display exploration controls and trigger submission form -->\n        <div v-if=\"consent\" id=\"target\" class=\"explorationWrapper\" data-step=\"3\"> \n          <p><strong>Click the bubbles to read people’s stories.</strong><br />Select countries and/or hashtags to filter.</p>\n          <v-select\n            :items=\"countries\"\n            v-model=\"currentCountry\"\n            label=\"Your country\"\n            outlined />\n          <p v-if=\"hashtags\" class=\"hashtags\">\n            <v-chip\n              v-for=\"(hashtag, i) in hashtags.filter((e,i) => i<10).sort((a,b) => a.tag.localeCompare(b.tag))\"\n              small\n              color=\"primary\"\n              :outlined=\"(activeHashtag != hashtag.tag)\"\n              :style=\"{fontSize: hashtag.size+'px', margin: '2px'}\"\n              :key=\"'hashtag-'+i\"\n              @click=\"filterMemories(hashtag.tag)\">{{hashtag.tag}} </v-chip>\n          </p>\n        </div>\n    </Scrollama>\n\n    <!-- call to action button -->\n    <div class=\"callToActionWrapper\" v-if=\"consent && currentStepId > 1\">\n          <v-btn color=\"primary\" outlined elevation=\"2\" @click=\"toggleDatepicker\">\n            <template v-if=\"!newMemory.datepicker\">\n              <v-icon small>mdi-tooltip-plus-outline</v-icon>Add your story to the curve\n            </template>\n            <template v-else>\n              <v-icon small>mdi-close-circle-outline</v-icon>Stop adding\n            </template>\n          </v-btn>\n    </div>\n\n    <!-- submission form (default: hidden) -->\n    <div class=\"formWrapper\" v-if=\"newMemory.showForm\">\n      <memoryForm\n        :date=\"newMemory.date\"\n        :country=\"currentCountry\"\n        :countries=\"countries\"\n        :hashtags=\"hashtags\"\n        @close=\"toggleForm(false)\"/>\n    </div>\n\n    <!-- display single memory (default: hidden) -->\n    <div class=\"memoryWrapper\" v-if=\"displayMemory.display\">\n      <memoryDisplay\n        :memory=\"displayMemory.memory\"\n        @close=\"showMemory(false)\"/>\n    </div>\n    </template>\n\n    <!-- loading screen if not everything has loaded yet -->\n    <template v-else>\n      <v-card class=\"d-flex justify-center mb-6\" color=\"rgb(255, 0, 0, 0.0)\" elevation=\"0\" style=\"margin-top: 100px;\">\n        <v-progress-circular\n        :size=\"300\"\n        indeterminate\n        color=\"primary\"\n        >Loading ...<br />try refresing?</v-progress-circular>\n      </v-card>\n      </template>\n  </v-app>\n</template>\n\n<script>\n//get packages\nimport Vue from 'vue'\nimport AsyncComputed from 'vue-async-computed'\nVue.use(AsyncComputed)\nimport 'intersection-observer' // for cross-browser support\nimport Scrollama from 'vue-scrollama'\nimport * as d3 from 'd3'\n\n\n//get services for API connectivity\nimport caseService from '@/services/caseService'\nimport memoryService from '@/services/memoryService'\n\n//get components\nimport memoryForm from './components/memoryForm'\nimport memoryDisplay from './components/memoryDisplay'\nimport counter from './components/counter'\nimport vis from './components/vis'\n\nexport default {\n  name: 'App',\n  components: {\n    Scrollama,\n    memoryForm,\n    memoryDisplay,\n    counter,\n    vis\n  },\n\n  data () {\n    return {\n      mounted: false,\n      consent: true, //only start recording after people consent\n      currentStepId: 0, //what part of the page are we in?\n      countries: null, \n      currentCountry: \"World\",      \n      hashtags: null,\n      activeHashtag: null,\n\n      visOptions: {\n        dimensions: {width: 0, height: 0, top: 80, right: 50, bottom: 0, left: 50},\n        progess: 0,\n        overlay: false,\n        displayMemory: false\n      },\n\n      displayMemory: {\n        display: false,\n      },\n      newMemory: {\n        datepicker: false, //show circle (formerly line) that adds new dot\n        showForm: false, //show form after clicking the dot\n        date: \"\" //is set when hovering line and passed to memory form\n        //date: \"2020-02-23\" //to quicker test form\n      }\n    }\n  },\n\n  asyncComputed: {\n    async cases() {\n      return (await caseService.getCases({country: this.currentCountry, metric: \"relative_cases\"})).data\n    },\n    async memories() {\n      return (await memoryService.getMemories({country: this.currentCountry})).data\n    }\n  },\n\n  watch:  {\n    memories: function(memories) {\n      let tags = memories.map(memory => memory.comment.match(/#[a-z]+/gi)).flat() //find all hashtags\n      let counted = tags.reduce((a, b) => (a[b] = (a[b] || 0) + 1, a), {}) //count occurence of single hashtags\n      let ranked = Object.keys(counted)\n        .map(tag => {return {tag: tag, occurences: counted[tag]}}) //turn into array\n        .sort((a,b) => b.occurences - a.occurences) //sort that array\n      \n      let scaleSize = d3.scaleLinear().domain(d3.extent(ranked,r=>r.occurences)).range([5,15]) //create scale for font sze of hashtags\n      ranked.forEach(hashtag => hashtag.size = scaleSize(hashtag.occurences)) //assign font size to each hashtag\n      this.hashtags = ranked;\n    }\n  },\n\n  created() {\n    window.addEventListener(\"resize\", this.resize);\n  },\n\n  async mounted () {\n    this.countries = (await caseService.getCountries()).data.map(e => e.country)\n    this.$nextTick(() => {\n      this.resize()\n      this.mounted = true;\n    })    \n },\n\n  methods: {\n    resize: function() {\n      Vue.set(this.visOptions.dimensions,'width',window.innerWidth)\n      Vue.set(this.visOptions.dimensions,'height',window.innerHeight)\n    },\n\n    giveConsent: function() {\n      this.consent = true\n      this.$nextTick(() => {\n        this.$vuetify.goTo(\"#target\", {duration: 2000});\n      });\n    },\n\n    showMemory: function(memory) {\n      if(memory) {\n        Vue.set(this.memories[this.memories.findIndex(e => e.id == memory.id)],'active',true) //set memory active\n        Vue.set(this.displayMemory,'memory',memory)\n        Vue.set(this.displayMemory,'display',true)\n        Vue.set(this.visOptions,'overlay',true)\n      } else {\n        Vue.set(this.displayMemory,'display',false)\n        Vue.set(this.memories[this.memories.findIndex(e => e.active)],'active',false)\n        Vue.set(this.visOptions,'overlay',false)\n        \n      }\n    },\n\n    stepEnterHandler({element, direction}) {\n      direction //maybe we need this later\n      switch(element.className) {\n        case \"introWrapper\": \n           Vue.set(this.visOptions,'progress',0)\n          break\n      }\n      this.currentStepId = element.dataset.step\n    },\n\n    stepProgressHandler({element, progress}) {\n      if(element.className == \"animatorWrapper\" && this.consent) { //if visitor has consentent AND were scrolling over the animatorWrapper\n        let showElementsNumber = Math.ceil(progress * this.memories.length) //compute number of memories to show (min: 0, max: all memories)\n        Vue.set(this.visOptions,'progress',showElementsNumber) //write to reactive data\n      }\n    },\n\n    toggleDatepicker: function() {\n      let bool = !this.newMemory.datepicker\n      Vue.set(this.newMemory,'datepicker',bool)\n    },\n\n    filterMemories: function(hashtag) {\n      if(this.activeHashtag != hashtag) {\n        this.activeHashtag = hashtag\n      } else {\n        this.activeHashtag = null\n      }\n    },\n\n    toggleForm: function(date) { //using an own method instead of inline assignment to stay sane\n      \n      if(date) {\n        Vue.set(this.newMemory,'date',date)\n        Vue.set(this.newMemory,'datepicker',false)\n        Vue.set(this.newMemory,'showForm',true)\n        this.overlay = true\n      } else {\n        Vue.set(this.newMemory,'showForm',false)\n        this.overlay = false\n      }\n    }\n  }\n}\n</script>\n\n<style src=\"vue-scrollama/dist/vue-scrollama.css\"></style>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@400;900&display=swap');\n\n.introWrapper, .explorationWrapper, .animatorWrapper  {\n  //border: 1px dotted black;\n  height: 100vh;\n  padding-top: 10px;\n}\n\n.scrollama {\n  width: 40%;\n  padding: 0 0px 50px 30px;\n  min-width: 200px;\n  max-width: 400px;\n  font-family: 'Roboto Slab', serif;\n  pointer-events: none;\n}\n\nbutton, .v-input {\n  pointer-events: all;\n}\n\nh1{\n  margin: 50px 0 10px 0px;\n  //height: 100px;\n  //position: fixed;\n  font-family: 'Roboto Slab', serif;\n  font-weight: 400;\n  font-size: 40px;\n  color: #FA5E2D;\n  line-height: 30px;\n}\n\n.callToActionWrapper {\n  position: fixed;\n  top: 10px;\n  right: 10px;\n}\n\nh1 span{\n  font-weight: 900;\n}\n\np {\n  font-family: 'Roboto Slab', serif;\n  font-weight: 400;\n}\n\np.larger {\n  font-size: 1.2em;\n}\n\np.smaller {\n  color: rgba(0,0,0);\n  font-size: 9px;\n  line-height: 10px;\n}\n\n.visWrapper {\n  position: fixed;\n  width: 100%;\n  left: 0;\n  height: 100%;\n  pointer-events: all;\n}\n\n.hashtags {\n  pointer-events: all;\n  line-height: 100%;\n}\n\n\n#app {\n  background: #FFEBC6;\n  min-height: 100%;\n  height: 100%;\n}\n</style>\n"],"sourceRoot":"src"}]}