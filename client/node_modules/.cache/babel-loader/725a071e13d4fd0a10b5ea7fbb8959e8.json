{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/memoryForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/memoryForm.vue","mtime":1615538901939},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90ay9HaXRIdWIvY29yb25hLW1lbW9yaWVzL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBNZW1vcnlTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvbWVtb3J5U2VydmljZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29tbWVudDogJycsCiAgICAgIG5hbWU6ICcnLAogICAgICBzdGF0dXM6IGZhbHNlLAogICAgICBjdXJyZW50Q291bnRyeTogbnVsbCwKICAgICAgZXhhY3REYXRlOiBmYWxzZSwKICAgICAgcGFuZWw6IDAsCiAgICAgIHNob3dIYXNodGFnczogMTAKICAgIH07CiAgfSwKICBwcm9wczogewogICAgY291bnRyeTogU3RyaW5nLAogICAgY291bnRyaWVzOiBBcnJheSwKICAgIGhhc2h0YWdzOiBBcnJheSwKICAgIGRhdGU6IFN0cmluZwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY3VycmVudENvdW50cnkgPSB0aGlzLmNvdW50cnk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRUYWc6IGZ1bmN0aW9uIGFkZFRhZyh0YWcpIHsKICAgICAgdGhpcy5jb21tZW50ID0gdGhpcy5jb21tZW50ICsgIiAiICsgdGFnOwogICAgfSwKICAgIHNlbmRNZW1vcnk6IGZ1bmN0aW9uIHNlbmRNZW1vcnkoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBwYXlsb2FkLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICAgIHBheWxvYWQgPSB7CiAgICAgICAgICAgICAgICAgIGNvbW1lbnQ6IF90aGlzLmNvbW1lbnQsCiAgICAgICAgICAgICAgICAgIGRhdGU6IG5ldyBEYXRlKF90aGlzLmRhdGUpLAogICAgICAgICAgICAgICAgICBuYW1lOiBfdGhpcy5uYW1lLAogICAgICAgICAgICAgICAgICBjb3VudHJ5OiBfdGhpcy5jb3VudHJ5LAogICAgICAgICAgICAgICAgICBpZDogbnVsbAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gTWVtb3J5U2VydmljZS5zZW5kTWVtb3J5KHBheWxvYWQpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UpIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09IDIwMCkgewogICAgICAgICAgICAgICAgICBfdGhpcy5zdGF0dXMgPSAiWW91ciBtZW1vcnkgaGFzIGJlZW4gcmVjb3JkZWQiOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIF90aGlzLnN0YXR1cyA9IF9jb250ZXh0LnQwLnJlc3BvbnNlLmRhdGEuZXJyb3I7CgogICAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDEwXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjbG9zZTogZnVuY3Rpb24gY2xvc2UoKSB7CiAgICAgIHRoaXMuc3RhdHVzID0gZmFsc2U7CiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3RhdHVzKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["memoryForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA,OAAA,aAAA,MAAA,0BAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,MAAA,EAAA,KAHA;AAIA,MAAA,cAAA,EAAA,IAJA;AAKA,MAAA,SAAA,EAAA,KALA;AAMA,MAAA,KAAA,EAAA,CANA;AAOA,MAAA,YAAA,EAAA;AAPA,KAAA;AASA,GAXA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA,KAFA;AAGA,IAAA,QAAA,EAAA,KAHA;AAIA,IAAA,IAAA,EAAA;AAJA,GAbA;AAoBA,EAAA,OApBA,qBAoBA;AACA,SAAA,cAAA,GAAA,KAAA,OAAA;AACA,GAtBA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,gBAAA,GAAA,EAAA;AACA,WAAA,OAAA,GAAA,KAAA,OAAA,GAAA,GAAA,GAAA,GAAA;AAEA,KAJA;AAKA,IAAA,UALA,wBAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AAEA,gBAAA,OAHA,GAGA;AACA,kBAAA,OAAA,EAAA,KAAA,CAAA,OADA;AAEA,kBAAA,IAAA,EAAA,IAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAFA;AAGA,kBAAA,IAAA,EAAA,KAAA,CAAA,IAHA;AAIA,kBAAA,OAAA,EAAA,KAAA,CAAA,OAJA;AAKA,kBAAA,EAAA,EAAA;AALA,iBAHA;AAAA;AAAA;AAAA,uBAWA,aAAA,CAAA,UAAA,CAAA,OAAA,CAXA;;AAAA;AAWA,gBAAA,QAXA;AAaA,oBAAA,QAAA,EAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AACA,oBAAA,QAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,MAAA,GAAA,+BAAA;AACA;;AAhBA;AAAA;;AAAA;AAAA;AAAA;AAmBA,gBAAA,KAAA,CAAA,MAAA,GAAA,YAAA,QAAA,CAAA,IAAA,CAAA,KAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA,KA1BA;AA4BA,IAAA,KAAA,EAAA,iBAAA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,OAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA;AACA;AAhCA;AAxBA,CAAA","sourcesContent":["<template>\n  <v-overlay>\n    <v-card\n      elevation=\"2\"\n      max-width=\"500\"\n      min-width=\"400\"\n      light\n      class=\"mx-auto\">\n      \n      <!--<v-toolbar color=\"lightgrey\">\n        <v-toolbar-title><span class=\"font\"></span></v-toolbar-title>\n        <v-spacer></v-spacer>\n        <v-btn icon @click=\"close()\"><v-icon center>mdi-close-circle</v-icon></v-btn>\n      </v-toolbar>-->\n\n      <v-card-text v-if=\"status\">\n        <v-alert\n          border=\"left\"\n          colored-border\n          color=\"primary\"\n          elevation=\"2\">\n          {{status}}\n        </v-alert>\n        <v-btn block color=\"primary\" outlined @click=\"close()\">Cool!</v-btn>\n      </v-card-text>\n      <v-card-text v-else>\n        <!-- story form -->\n        <v-expansion-panels accordion focusable v-model=\"panel\">\n          <v-expansion-panel>\n            <v-expansion-panel-header>(1) Add your story to the curve</v-expansion-panel-header>\n            <v-expansion-panel-content>\n              <v-form style=\"padding: 10px 0\">\n                <v-text-field v-model=\"name\" dense outlined label=\"Name (optional)\" />\n                <v-textarea dense outlined v-model=\"comment\"  label=\"Your Memory\" />\n              </v-form>\n              <p v-if=\"hashtags\" class=\"hashtags\">\n                Adding these (or other) tags to your story helps others to find it <br/>\n                <v-chip\n                  v-for=\"(hashtag, i) in hashtags.filter((e,i) => i<showHashtags).sort((a,b) => a.tag.localeCompare(b.tag))\"\n                  small\n                  color=\"primary\"\n                  :outlined=\"!comment.includes(hashtag.tag)\"\n                  :style=\"{margin: '2px'}\"\n                  :key=\"'hashtag-'+i\"\n                 @click=\"addTag(hashtag.tag)\">{{hashtag.tag}} </v-chip>\n            <a @click=\"showHashtags = 20\">show more</a></p>\n            </v-expansion-panel-content>\n          </v-expansion-panel>\n\n          <!-- metadata form -->\n          <v-expansion-panel>\n            <v-expansion-panel-header>(2) When and where did that happen?</v-expansion-panel-header>\n            <v-expansion-panel-content>\n              <v-form  style=\"padding: 10px 0\">\n                <v-select\n                  :items=\"countries\"\n                  v-model=\"currentCountry\"\n                  dense\n                  label=\"Your country\"\n                   outlined />\n                <v-text-field\n                  v-model=\"date\"\n                  label=\"Date\"\n                  outlined\n                  dense\n                  readonly\n                ></v-text-field>\n                <v-checkbox\n                  v-model=\"exactDate\"\n                  label=\"Use exact date\"\n                ></v-checkbox>\n              </v-form>\n            </v-expansion-panel-content>\n          </v-expansion-panel>\n        </v-expansion-panels>\n       <!-- <p>What did you lorem ipsum sed dolor sit amet?</p>-->\n        \n          \n    \n          <v-btn style=\"margin: 10px 0\" block color=\"primary\" outlined @click=\"sendMemory\">Send</v-btn>\n          \n            <v-btn :style=\"{left: '50%', transform:'translateX(-50%)'}\" x-small @click=\"close()\">cancel</v-btn>\n          \n          \n        \n      </v-card-text>\n    <!--<v-date-picker v-model=\"picker\"></v-date-picker>-->\n    </v-card>\n  </v-overlay>\n</template>\n\n<script>\nimport MemoryService from '@/services/memoryService'\nexport default {\n  data () {\n    return {\n      comment: '',\n      name: '',\n      status: false,\n      currentCountry: null,\n      exactDate: false,\n      panel: 0,\n      showHashtags: 10,\n    }\n  },\n\n  props: {\n    country: String,\n    countries: Array,\n    hashtags: Array,\n    date: String,\n  },\n\n  mounted() {\n    this.currentCountry = this.country\n  },\n\n  methods: {\n    addTag: function(tag) {\n      this.comment = this.comment + \" \" + tag\n\n    },\n    async sendMemory () {\n      this.loading = true\n\n      let payload = {\n        comment: this.comment,\n        date: new Date(this.date),\n        name: this.name,\n        country: this.country,\n        id: null,\n      }      \n      try {\n        const response = await MemoryService.sendMemory(payload)\n        \n        if(response) this.loading=false\n        if(response.status == 200) {\n          this.status = \"Your memory has been recorded\"\n        }\n\n      } catch (err) {\n        this.status = err.response.data.error\n      }\n    },\n\n    close: function() {\n      this.status = false\n      this.$emit('close')\n      console.log(this.status)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.font {\n  font-family: 'Roboto Slab', serif !important;\n}\n\n\n  .v-expansion-panel--active>.v-expansion-panel-header {\n    min-height: 16px\n  }\n\n\n.white {\n  color: white !important;\n}\n</style>\n"],"sourceRoot":"src/components"}]}