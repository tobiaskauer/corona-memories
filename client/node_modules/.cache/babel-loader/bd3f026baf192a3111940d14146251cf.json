{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/vis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/vis.vue","mtime":1614964686819},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90ay9HaXRIdWIvY29yb25hLW1lbW9yaWVzL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhcnNlRGF0ZTogZDMudXRjUGFyc2UoIiVZLSVtLSVkIiksCiAgICAgIGZvcm1hdERhdGU6IGQzLnRpbWVGb3JtYXQoIiVZLSVtLSVkIiksCiAgICAgIGZvcm1hdFByZXR0eTogZDMudGltZUZvcm1hdCgiJWIgJWQgJVkiKSwKICAgICAgbGluZUdlbmVyYXRvcjogZDMubGluZSgpLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC54OwogICAgICB9KS55KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueTsKICAgICAgfSkuY3VydmUoZDMuY3VydmVCYXNpcyksCiAgICAgIG1vdW50ZWQ6IGZhbHNlLAogICAgICBvcGFjaXR5OiAwLjcsCiAgICAgIC8vY2lyY2xlIG9wYWNpdHkgd2hlbiBub3QgaG92ZXJlZAogICAgICBmb3JjZURpc3RhbmNlOiAxMCwKICAgICAgLy9kaXN0YW5jZSBvZiByZWFjdGlvbnMgdG8gbGluZQogICAgICBjdXJyZW50TWVtb3J5OiBudWxsLAogICAgICAvL3doZW4gY3VycmVudGx5IGRpc3BsYXlpbmcgYSBtZW1vcnksIHBpY2sgdGhlIHJpZ2h0IG9uZSB0byBoaWdobGlnaHQKICAgICAgbmV3TWVtb3J5OiB7CiAgICAgICAgZGF0ZTogbnVsbCwKICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICBwb3NpdGlvbjogewogICAgICAgICAgeDogLTEwMCwKICAgICAgICAgIHk6IC0xMDAKICAgICAgICB9IC8vc3RhcnQgb3V0IG9mIHNpZ2h0CgogICAgICB9CiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIG9wdGlvbnM6IE9iamVjdCwKICAgIC8vZGltZW5zaW9uczogT2JqZWN0LAogICAgY2FzZXM6IEFycmF5LAogICAgbWVtb3JpZXM6IEFycmF5LAogICAgZGF0ZVBpY2tlcjogQm9vbGVhbiAvL292ZXJsYXk6IEJvb2xlYW4sCgogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHBhcnNlZENhc2VzOiBmdW5jdGlvbiBwYXJzZWRDYXNlcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiB0aGlzLmNhc2VzLm1hcChmdW5jdGlvbiAoYywgaSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBkYXRlU3RyaW5nOiBjLmQsCiAgICAgICAgICBkYXRlOiBfdGhpcy5wYXJzZURhdGUoYy5kKSwKICAgICAgICAgIHZhbHVlOiBjLnYsCiAgICAgICAgICBzbG9wZTogaSA+IDUgPyBjLnYgLSBfdGhpcy5jYXNlc1tpIC0gNl0udiA6IDAgLy9oZWxwcyBjb21wdXRpbmcgdGhlIGJlZXN3YXJtJ3MgZGlzdGFuY2UKCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgc2NhbGVzOiBmdW5jdGlvbiBzY2FsZXMoKSB7CiAgICAgIGlmICghdGhpcy5wYXJzZWRDYXNlcyAmJiB0aGlzLm1lbW9yaWVzKSByZXR1cm4gbnVsbDsKICAgICAgdmFyIHlEb21haW4gPSBbMCwgZDMubWF4KFs1MCwgZDMubWF4KHRoaXMucGFyc2VkQ2FzZXMsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQudmFsdWU7CiAgICAgIH0pXSldOyAvL21pbmltdW0gb2YgNTAgY2FzZXMgdG8gaGF2ZSBhIHNvbWV3aGF0IGNvbnNpc3RlbnQgbGF5b3V0CgogICAgICB2YXIgeERvbWFpbiA9IGQzLmV4dGVudCh0aGlzLnBhcnNlZENhc2VzLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmRhdGU7CiAgICAgIH0pOwogICAgICB2YXIgcmFkaXVzRG9tYWluID0gZDMuZXh0ZW50KHRoaXMubWVtb3JpZXMsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQud2VpZ2h0OwogICAgICB9KTsKICAgICAgdmFyIHggPSBkMy5zY2FsZVRpbWUoKS5kb21haW4oeERvbWFpbikucmFuZ2UoW3RoaXMub3B0aW9ucy5kaW1lbnNpb25zLmxlZnQsIHRoaXMub3B0aW9ucy5kaW1lbnNpb25zLndpZHRoIC0gdGhpcy5vcHRpb25zLmRpbWVuc2lvbnMucmlnaHRdKTsKICAgICAgdmFyIHkgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbih5RG9tYWluKS5yYW5nZShbdGhpcy5vcHRpb25zLmRpbWVuc2lvbnMuaGVpZ2h0IC0gdGhpcy5vcHRpb25zLmRpbWVuc2lvbnMuYm90dG9tIC0gdGhpcy5vcHRpb25zLmRpbWVuc2lvbnMudG9wLCB0aGlzLm9wdGlvbnMuZGltZW5zaW9ucy50b3BdKTsKICAgICAgdmFyIHJhZGl1cyA9IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKHJhZGl1c0RvbWFpbikucmFuZ2UoWzMsIDRdKTsKICAgICAgcmV0dXJuIHsKICAgICAgICB4OiB4LAogICAgICAgIHk6IHksCiAgICAgICAgcmFkaXVzOiByYWRpdXMKICAgICAgfTsKICAgIH0sCiAgICBjYXNlTGluZTogZnVuY3Rpb24gY2FzZUxpbmUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLnNjYWxlcykgcmV0dXJuIGZhbHNlOwogICAgICB2YXIgYXJyID0gdGhpcy5wYXJzZWRDYXNlcy5tYXAoZnVuY3Rpb24gKGMpIHsKICAgICAgICBjLnggPSBfdGhpczIuc2NhbGVzLngoYy5kYXRlKTsKICAgICAgICBjLnkgPSBfdGhpczIuc2NhbGVzLnkoYy52YWx1ZSk7CiAgICAgICAgcmV0dXJuIGM7CiAgICAgIH0pOwogICAgICByZXR1cm4gdGhpcy5saW5lR2VuZXJhdG9yKGFycik7CiAgICB9LAogICAgY2lyY2xlTWVtb3JpZXM6IGZ1bmN0aW9uIGNpcmNsZU1lbW9yaWVzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5tZW1vcmllcyAmJiAhdGhpcy5zY2FsZXMpIHJldHVybiBudWxsOwogICAgICB2YXIgYXJyID0gdGhpcy5tZW1vcmllczsKICAgICAgdmFyIHNsb3BlRG9tYWluID0gZDMuZXh0ZW50KHRoaXMucGFyc2VkQ2FzZXMsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuc2xvcGU7CiAgICAgIH0pOwoKICAgICAgaWYgKGFyciAmJiBhcnIubGVuZ3RoID4gMCkgewogICAgICAgIC8vY29tcHV0ZSB4L3kgY29vcmRpbmF0ZXMgZm9yIGFsbCBtZW1vcmllcyAoYmVmb3JlIHR1cm5pbmcgdGhlbSBpbnRvIGEgYmVlc3dhcm0pCiAgICAgICAgLy9hcnIgPSBhcnIuZmlsdGVyKG1lbW9yeSA9PiBtZW1vcnkuZGF0ZSA9PSBtZW1vcnkuZW5kZGF0ZSkgLy9vbmx5IGdldCBtZW1vcmllcyB0aGF0IGFyZSBvbmx5IG9uZSBkYXkgbG9uZwogICAgICAgIGFyci5mb3JFYWNoKGZ1bmN0aW9uIChtZW1vcnksIGkpIHsKICAgICAgICAgIHZhciBzbG9wZSA9IF90aGlzMy5nZXRMaW5lRWxlbWVudChtZW1vcnkuZGF0ZSkuc2xvcGU7CgogICAgICAgICAgdmFyIG1heFNsb3BlID0gc2xvcGUgPj0gMCA/IHNsb3BlRG9tYWluWzFdIDogc2xvcGVEb21haW5bMF07IC8vaWYgc2xvcGUgaXMgbmVnYXRpdmUsIHVzZSBuZWdhdGl2IG1heCB0byBjb21wdXRlIGRpc3RhbmNlCgogICAgICAgICAgdmFyIHNpZ24gPSBpICUgMiA/IC0xIDogMTsgLy9zcGxpdCBpbnRvIGEgbGluZSBhYm92ZSBhbmQgb25lIGJlbG93CgogICAgICAgICAgdmFyIGNoYW5nZVkgPSBzaWduICogKE1hdGguYWJzKG1heFNsb3BlKSAtIE1hdGguYWJzKHNsb3BlKSkgKiAoMSAvIF90aGlzMy5mb3JjZURpc3RhbmNlKTsgLy9jaGFuZ2Ugb24geSBheGlzIGRlY3JlYXNlcyBhcyBzbG9wZSBnZXRzIGhpZ2hlcgoKCiAgICAgICAgICB2YXIgY2hhbmdlWCA9IHNpZ24gKiAobWF4U2xvcGUgLSBzbG9wZSkgKiAoMSAvIF90aGlzMy5mb3JjZURpc3RhbmNlKTsgLy9jaGFuZ2Ugb24geSBheGlzIGRlY3JlYXNlcyBhcyBzbG9wZSBnZXRzIGhpZ2hlcgoKICAgICAgICAgIG1lbW9yeS55ID0gX3RoaXMzLnNjYWxlcy55KF90aGlzMy5nZXRMaW5lRWxlbWVudChtZW1vcnkuZGF0ZSkudmFsdWUpICsgY2hhbmdlWTsKICAgICAgICAgIG1lbW9yeS54ID0gX3RoaXMzLnNjYWxlcy54KF90aGlzMy5wYXJzZURhdGUobWVtb3J5LmRhdGUpKSArIGNoYW5nZVg7CiAgICAgICAgICBtZW1vcnkucmFkaXVzID0gX3RoaXMzLnNjYWxlcy5yYWRpdXMobWVtb3J5LndlaWdodCk7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBhcnI7CiAgICB9LAoKICAgIC8qbGluZU1lbW9yaWVzOiBmdW5jdGlvbigpIHsKICAgICAgaWYoIXRoaXMubWVtb3JpZXMgJiYgIXRoaXMuc2NhbGVzKSB7Y29uc29sZS5sb2codGhpcy5tZW1vcmllcyx0aGlzLnNjYWxlcyk7IHJldHVybiBudWxsfSAKICAgICAgbGV0IGFyciA9IHRoaXMubWVtb3JpZXMKICAgICAgaWYoYXJyLmxlbmd0aCA+IDApIHsKICAgICAgICBhcnIgPSBhcnIuZmlsdGVyKG1lbW9yeSA9PiBtZW1vcnkuZGF0ZSAhPSBtZW1vcnkuZW5kZGF0ZSkKICAgICAgICBhcnIuZm9yRWFjaCgobWVtb3J5LGkpPT4gewogICAgICAgICAgbGV0IHNlZ21lbnQgPSB0aGlzLmdldExpbmVTZWdtZW50KG1lbW9yeS5kYXRlLG1lbW9yeS5lbmRkYXRlKQogICAgICAgICAgaWYoc2VnbWVudC5sZW5ndGggPiAwKSBzZWdtZW50LmZvckVhY2gocyA9PiBzLnkgPSBzLnkgLSA1KSAKICAgICAgICAgIGlmKGk9PTEpY29uc29sZS5sb2coc2VnbWVudCx0aGlzLmxpbmVHZW5lcmF0b3Ioc2VnbWVudCkpCiAgICAgICAgICBtZW1vcnkucGF0aCA9IHRoaXMubGluZUdlbmVyYXRvcihzZWdtZW50KQogICAgICAgIH0pCiAgICAgIH0KICAgICAgcmV0dXJuIGFycgogICAgfSwqLwogICAgYmVlc3dhcm06IGZ1bmN0aW9uIGJlZXN3YXJtKCkgewogICAgICBpZiAoIXRoaXMuY2lyY2xlTWVtb3JpZXMpIHJldHVybiBudWxsOwogICAgICB2YXIgZm9yY2UgPSBkMy5mb3JjZVNpbXVsYXRpb24odGhpcy5jaXJjbGVNZW1vcmllcykuZm9yY2UoJ2ZvcmNlWCcsIGQzLmZvcmNlWChmdW5jdGlvbiAobWVtb3J5KSB7CiAgICAgICAgcmV0dXJuIG1lbW9yeS54OwogICAgICB9KS5zdHJlbmd0aCguMSkpLmZvcmNlKCdmb3JjZVknLCBkMy5mb3JjZVkoZnVuY3Rpb24gKG1lbW9yeSkgewogICAgICAgIHJldHVybiBtZW1vcnkueTsKICAgICAgfSkuc3RyZW5ndGgoLjEpKS5mb3JjZSgnY29sbGlkZScsIGQzLmZvcmNlQ29sbGlkZShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnJhZGl1cyArIC41OwogICAgICB9KSk7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwMDsgKytpKSB7CiAgICAgICAgZm9yY2UudGljaygpOwogICAgICB9CgogICAgICByZXR1cm4gZm9yY2Uubm9kZXMoKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBiZWVzd2FybTogZnVuY3Rpb24gYmVlc3dhcm0oYXJyKSB7CiAgICAgIC8vc2hvdyBjaXJjbGUgb24gb3ZlcmxheSBhZnRlciBiZWVzd2FybSBjaGFuZ2VkCiAgICAgIHZhciBjID0gYXJyLmZpbHRlcihmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBlLmFjdGl2ZTsKICAgICAgfSlbMF07CgogICAgICBpZiAoYykgewogICAgICAgIHRoaXMuY3VycmVudE1lbW9yeSA9IGM7CiAgICAgICAgdGhpcy5jdXJyZW50TWVtb3J5LmNvbm5lY3RvciA9ICJcbiAgICAgICAgTSIuY29uY2F0KGMueCwgIiAiKS5jb25jYXQoYy55LCAiXG4gICAgICAgIFEiKS5jb25jYXQodGhpcy5vcHRpb25zLmRpbWVuc2lvbnMud2lkdGggLyAyLCAiICIpLmNvbmNhdChjLnksICJcbiAgICAgICAgIikuY29uY2F0KHRoaXMub3B0aW9ucy5kaW1lbnNpb25zLndpZHRoIC8gMiwgIiAiKS5jb25jYXQodGhpcy5vcHRpb25zLmRpbWVuc2lvbnMuaGVpZ2h0IC8gMik7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXM0Lm1vdW50ZWQgPSB0cnVlOwogICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIF90aGlzNC5vbk1vdXNlTW92ZSk7CiAgICAgICAgICAgICAgLypkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCB0aGlzLm9uTW91c2VEb3duKQogICAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLm9uTW91c2VVcCkqLwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgaG92ZXI6IGZ1bmN0aW9uIGhvdmVyKG1lbW9yeSwgZXZlbnQpIHsKICAgICAgLy9ob3ZlcmluZyBjaXJjbGVzCiAgICAgIGlmICghdGhpcy5kYXRlUGlja2VyKSB7CiAgICAgICAgLy9kaXNhYmxlIGhvdmVyIHdoZW4gbWVtb3J5IGFkZGluZyBpcyBpbiBwcm9ncmVzcwogICAgICAgIHZhciByID0gMTA7CiAgICAgICAgdmFyIG9wYWNpdHkgPSAxOwoKICAgICAgICBpZiAoZXZlbnQudHlwZSA9PSAnbW91c2VvdXQnKSB7CiAgICAgICAgICByID0gbWVtb3J5LndlaWdodDsKICAgICAgICAgIG9wYWNpdHkgPSB0aGlzLm9wYWNpdHk7CiAgICAgICAgfQoKICAgICAgICBkMy5zZWxlY3QoZXZlbnQudGFyZ2V0KS50cmFuc2l0aW9uKCI1MCIpLmF0dHIoInIiLCByKS5hdHRyKCJvcGFjaXR5Iiwgb3BhY2l0eSk7CiAgICAgIH0KICAgIH0sCiAgICBnZXRMaW5lRWxlbWVudDogZnVuY3Rpb24gZ2V0TGluZUVsZW1lbnQoZGF0ZVN0cmluZykgewogICAgICB2YXIgdmFsdWVPbk1lbW9yeURhdGUgPSB0aGlzLnBhcnNlZENhc2VzLmZpbmQoZnVuY3Rpb24gKGMpIHsKICAgICAgICByZXR1cm4gZGF0ZVN0cmluZyA9PSBjLmRhdGVTdHJpbmc7CiAgICAgIH0pOwogICAgICByZXR1cm4gdmFsdWVPbk1lbW9yeURhdGUgPyB2YWx1ZU9uTWVtb3J5RGF0ZSA6IG51bGw7CiAgICB9LAogICAgZ2V0TGluZVNlZ21lbnQ6IGZ1bmN0aW9uIGdldExpbmVTZWdtZW50KHN0YXJ0RGF0ZSwgZW5kRGF0ZSkgewogICAgICBzdGFydERhdGUgPSB0eXBlb2Ygc3RhcnREYXRlID09PSAnc3RyaW5nJyA/IHRoaXMucGFyc2VEYXRlKHN0YXJ0RGF0ZSkgOiBzdGFydERhdGU7CiAgICAgIGVuZERhdGUgPSB0eXBlb2YgZW5kRGF0ZSA9PT0gJ3N0cmluZycgPyB0aGlzLnBhcnNlRGF0ZShlbmREYXRlKSA6IGVuZERhdGU7CiAgICAgIHZhciBzZWdtZW50ID0gdGhpcy5wYXJzZWRDYXNlcy5maWx0ZXIoZnVuY3Rpb24gKGMpIHsKICAgICAgICByZXR1cm4gKC8vZ2V0IHBhcnRzIG9mIHRoZSBjYXNlTGluZSB0aGF0IG1hdGNoIGN1cnJlbnQgZGF0ZXMKICAgICAgICAgIGMuZGF0ZSA8IGVuZERhdGUgJiYgYy5kYXRlID4gc3RhcnREYXRlIHx8IC8vZm9yd2FyZCBtb3ZlbWVudAogICAgICAgICAgYy5kYXRlID4gZW5kRGF0ZSAmJiBjLmRhdGUgPCBzdGFydERhdGUKICAgICAgICApOwogICAgICB9IC8vYmFja3dhcmQgbW92ZW1lbnQKICAgICAgKTsKICAgICAgcmV0dXJuIHNlZ21lbnQ7CiAgICB9LAogICAgb25Nb3VzZU1vdmU6IGZ1bmN0aW9uIG9uTW91c2VNb3ZlKGV2ZW50KSB7CiAgICAgIC8vZm9sbG93IGxpbmUKICAgICAgaWYgKHRoaXMuZGF0ZVBpY2tlcikgewogICAgICAgIHZhciBkYXRlID0gdGhpcy5zY2FsZXMueC5pbnZlcnQoZXZlbnQuY2xpZW50WCk7CiAgICAgICAgdmFyIGRhdGVTdHJpbmcgPSB0aGlzLmZvcm1hdERhdGUoZGF0ZSk7CiAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5zY2FsZXMueSh0aGlzLmdldExpbmVFbGVtZW50KGRhdGVTdHJpbmcpLnZhbHVlKTsKICAgICAgICBWdWUuc2V0KHRoaXMubmV3TWVtb3J5LCAnZGF0ZScsIGRhdGUpOyAvL2Fsc28gbW92ZSBjaXJjbGUKCiAgICAgICAgVnVlLnNldCh0aGlzLm5ld01lbW9yeS5wb3NpdGlvbiwgJ3gnLCBldmVudC5jbGllbnRYKTsgLy9hbHNvIG1vdmUgY2lyY2xlCgogICAgICAgIFZ1ZS5zZXQodGhpcy5uZXdNZW1vcnkucG9zaXRpb24sICd5JywgdmFsdWUpOwogICAgICB9CiAgICB9IC8vYWx0ZXJuYXRpdmUgaW50ZXJhY3Rpb24gd2l0aCBkcmFnZ2luZyBhIGxpbmUKCiAgICAvKm9uTW91c2VNb3ZlOiBmdW5jdGlvbihldmVudCkgeyAvL2ZvbGxvdyBsaW5lCiAgICAgIGlmKHRoaXMuZGF0ZVNlbGVjdG9yKSB7CiAgICAgICAgbGV0IGVuZERhdGUgPSB0aGlzLnNjYWxlcy54LmludmVydChldmVudC5jbGllbnRYKQogICAgICAgIGxldCBkYXRlU3RyaW5nID0gdGhpcy5mb3JtYXREYXRlKGVuZERhdGUpCiAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5zY2FsZXMueSh0aGlzLmdldExpbmVFbGVtZW50KGRhdGVTdHJpbmcpLnZhbHVlKQogICAgICAgICBpZih0aGlzLm1vdXNlRG93bikgeyAvL2lmIG1vdXNlIGlmIHByZXNzZWQKICAgICAgICAgIGxldCBhcnIgPSB0aGlzLmdldExpbmVTZWdtZW50KHRoaXMubmV3TWVtb3J5LnN0YXJ0RGF0ZSxlbmREYXRlKQogICAgICAgICAgVnVlLnNldCh0aGlzLm5ld01lbW9yeSwnbGluZScsIHRoaXMubGluZUdlbmVyYXRvcihhcnIpKSAvL2NyZWF0ZSBzdmcgTGluZQogICAgICAgIH0KICAgICAgICBWdWUuc2V0KHRoaXMubmV3TWVtb3J5LmNpcmNsZSwneCcsZXZlbnQuY2xpZW50WCkgLy9hbHNvIG1vdmUgY2lyY2xlCiAgICAgICAgVnVlLnNldCh0aGlzLm5ld01lbW9yeS5jaXJjbGUsJ3knLHZhbHVlKQogICAgICB9CiAgICB9LAogICAgIG9uTW91c2VEb3duOiBmdW5jdGlvbihldmVudCkgeyAvL2ZvbGxvdyBsaW5lCiAgICAgIGlmKHRoaXMuZGF0ZVNlbGVjdG9yKSB7CiAgICAgICAgdGhpcy5tb3VzZURvd24gPSB0cnVlCiAgICAgICAgbGV0IGV4YWN0RGF0ZSA9IHRoaXMuc2NhbGVzLnguaW52ZXJ0KGV2ZW50LmNsaWVudFgpCiAgICAgICAgVnVlLnNldCh0aGlzLm5ld01lbW9yeSwnc3RhcnREYXRlJyxleGFjdERhdGUpCiAgICAgIH0KICAgIH0sCiAgICAgb25Nb3VzZVVwOiBmdW5jdGlvbihldmVudCkgeyAvL2ZvbGxvdyBsaW5lCiAgICAgIGlmKHRoaXMuZGF0ZVNlbGVjdG9yKSB7CiAgICAgICAgdGhpcy5tb3VzZURvd24gPSBmYWxzZQogICAgICAgIGxldCBleGFjdERhdGUgPSB0aGlzLnNjYWxlcy54LmludmVydChldmVudC5jbGllbnRYKQogICAgICAgIGV4YWN0RGF0ZQogICAgICB9CiAgICB9LCovCgogIH0sCiAgZGlyZWN0aXZlczogewogICAgLy9heGlzIGNvbXB1dGF0aW9uCiAgICBheGlzOiBmdW5jdGlvbiBheGlzKGVsLCBiaW5kaW5nKSB7CiAgICAgIHZhciBheGlzID0gZDMuc2VsZWN0KGVsKTsKCiAgICAgIHN3aXRjaCAoYmluZGluZy5hcmcpIHsKICAgICAgICBjYXNlICJ4IjoKICAgICAgICAgIGF4aXMuY2FsbChkMy5heGlzQm90dG9tKGJpbmRpbmcudmFsdWUueCkudGlja3MoZDMudGltZU1vbnRoKS50aWNrRm9ybWF0KGQzLnRpbWVGb3JtYXQoIiViIikpKTsKICAgICAgICAgIGF4aXMuc2VsZWN0QWxsKCIuZG9tYWluIikuYXR0cigic3Ryb2tlIiwgIm5vbmUiKTsKICAgICAgICAgIGF4aXMuc2VsZWN0QWxsKCIudGljayBsaW5lIikuYXR0cigic3Ryb2tlIiwgIm5vbmUiKTsKICAgICAgICAgIGF4aXMuc2VsZWN0QWxsKCIudGljayB0ZXh0Iikuc3R5bGUoInRleHQtYW5jaG9yIiwgImVuZCIpLnN0eWxlKCJ0ZXh0LXRyYW5zZm9ybSIsICJVUFBFUkNBU0UiKS5zdHlsZSgib3BhY2l0eSIsIC4zKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICJ5IjoKICAgICAgICAgIGF4aXMuY2FsbChkMy5heGlzUmlnaHQoYmluZGluZy52YWx1ZS55KS50aWNrU2l6ZSgtMTAwMCkudGlja3MoNSkpOwogICAgICAgICAgYXhpcy5zZWxlY3RBbGwoIi5kb21haW4iKS5hdHRyKCJzdHJva2UiLCAibm9uZSIpOwogICAgICAgICAgYXhpcy5zZWxlY3RBbGwoIi50aWNrIGxpbmUiKS5hdHRyKCJvcGFjaXR5IiwgLjA1KTsKICAgICAgICAgIGF4aXMuc2VsZWN0QWxsKCIudGljayB0ZXh0IikuYXR0cigib3BhY2l0eSIsIC4zKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["vis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <svg :width=\"options.dimensions.width\" :height=\"options.dimensions.height\" v-if=\"mounted\" z-index=\"5\">\n    \n    <filter id=\"blurMe\">\n      <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"1\" />\n    </filter>\n    \n    <g class=\"axis xAxis\" v-axis:x=\"scales\" :transform=\"`translate(0,${options.dimensions.height-options.dimensions.top-options.dimensions.bottom+10})`\"></g>\n    <g class=\"axis yAxis\" v-axis:y=\"scales\" :transform=\"`translate(${options.dimensions.width-options.dimensions.right})`\"></g>\n\n    <path\n      :d=\"caseLine\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\" \n      fill=\"none\"\n      stroke=\"black\"/>\n\n    <g class=\"memories\"  transform=\"translate(0,0)\"> <!-- can go to component, actually.... -->\n      <g v-if=\"beeswarm\">\n        <g v-for=\"memory, j in beeswarm.filter((e,i) => i < options.progress)\" :key=\"j\">\n          <circle\n            :cx=\"memory.x\"\n            :cy=\"memory.y\"\n            :opacity=\"opacity\"\n            :r=\"memory.radius\"\n            fill=\"#FA5E2D\"\n            :filter=\"(options.overlay) ? 'url(#blurMe)' : ''\"\n\n            @click=\"$emit('showMemory',memory)\"\n            @mouseover=\"hover(memory,$event)\"\n            @mouseout=\"hover(memory,$event)\" />\n\n          <!--<text\n            :x=\"memory.x\"\n            :y=\"memory.y\"\n           fill=\"#FA5E2D\"\n            @click=\"$emit('showMemory',memory)\"\n            @mouseover=\"hover(memory,$event)\"\n            @mouseout=\"hover(memory,$event)\">{{memory.comment}}\n            </text>-->\n        </g> <!-- circleMemories </g>-->\n      </g>\n\n      <!--<g v-for=\"(memory, k) in lineMemories\" :key=\"'line-'+k\" >\n        <path v-if=\"memory.path\" stroke-linecap=\"round\" :opacity=\"opacity\" stroke-dasharray=\"1 5\" stroke-width=\"2\" :d=\"memory.path\" stroke=\"#FA5E2D\" fill=\"none\" />\n      </g>-->\n    </g>\n\n        \n\n  \n\n    <!--<g class=\"dateSelector\" @click=\"$emit('showForm', formatDate(newMemory.date))\" v-if=\"dateSelector\">-->\n    <g class=\"datePicker\"\n     v-if=\"datePicker\"\n     :transform=\"`translate(${newMemory.position.x},0)`\"> <!-- can go to own component -->\n      <line y1=\"0\" :y2=\"options.dimensions.height\" x1=\"0\" x2=\"0\" stroke=\"#FA5E2D\" stroke-dasharray=\"1,4\"/>\n      <circle r=\"40\" cx=\"0\" :cy=\"newMemory.position.y\" fill=\"#FA5E2D\" @click=\"$emit('toggleForm', formatDate(newMemory.date))\"  />\n      <text x=\"0\" text-anchor=\"middle\" :y=\"(newMemory.position.y - 5)\">Click to add</text>\n      <text x=\"0\" class=\"strong\" text-anchor=\"middle\" :y=\"(newMemory.position.y + 5)\">{{formatPretty(newMemory.date)}}</text>\n    </g>\n\n    <g class=\"overlay\" v-if=\"options.overlay\">\n      <rect x=\"0\" y=\"0\" :width=\"options.dimensions.width\" :height=\"options.dimensions.height\" fill=\"black\" opacity=\".5\" pointer-events=\"none\"/>\n      <g v-if=\"currentMemory\">\n\n        <circle\n          r=20\n          :cx=\"currentMemory.x\"\n          :cy=\"currentMemory.y\"\n          fill=\"#FA5E2D\" />\n\n        <path\n          :d=\"currentMemory.connector\"\n          stroke-width=\"2\"\n          fill=\"none\"\n          stroke=\"#FA5E2D\"/>\n\n      </g>\n    </g>\n  </svg>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport * as d3 from 'd3'\n\nexport default {\n  data () {\n    return {\n      parseDate: d3.utcParse(\"%Y-%m-%d\"),\n      formatDate: d3.timeFormat(\"%Y-%m-%d\"),\n      formatPretty: d3.timeFormat(\"%b %d %Y\"),\n      lineGenerator: d3.line().x(d => d.x).y(d => d.y).curve(d3.curveBasis),\n      mounted: false,\n      opacity: 0.7, //circle opacity when not hovered\n      forceDistance: 10, //distance of reactions to line\n      currentMemory: null, //when currently displaying a memory, pick the right one to highlight\n      newMemory: {\n        date: null,\n        show: false,\n        position: {x: -100, y: -100}, //start out of sight\n      },\n    }\n  },\n\n  props: {\n    options: Object,\n    //dimensions: Object,\n    cases: Array,\n    memories: Array,\n    datePicker: Boolean,\n    //overlay: Boolean,\n\n  },\n\n  computed: {\n    parsedCases: function() {\n      return this.cases.map((c,i) => {\n        return {\n          dateString: c.d,\n          date: this.parseDate(c.d),\n          value: c.v,\n          slope: (i>5) ? c.v - this.cases[i-6].v : 0 //helps computing the beeswarm's distance\n        }\n      })\n    },\n\n    scales: function() {\n      if(!this.parsedCases && this.memories) return null\n\n      let yDomain = [0,d3.max([50,d3.max(this.parsedCases, d=>d.value)])] //minimum of 50 cases to have a somewhat consistent layout\n      let xDomain = d3.extent(this.parsedCases, d=>d.date)\n      let radiusDomain = d3.extent(this.memories, d=>d.weight)\n\n      let x = d3.scaleTime().domain(xDomain).range([this.options.dimensions.left,this.options.dimensions.width-this.options.dimensions.right])\n      let y = d3.scaleLinear().domain(yDomain).range([this.options.dimensions.height-this.options.dimensions.bottom-this.options.dimensions.top,this.options.dimensions.top])\n      let radius = d3.scaleLinear().domain(radiusDomain).range([3,4])\n      \n      return {x: x, y: y, radius: radius}\n    },\n\n    caseLine: function() {\n      if(!this.scales) return false\n\n      let arr = this.parsedCases.map(c => { \n        c.x = this.scales.x(c.date)\n        c.y = this.scales.y(c.value)\n        return c;\n      })\n    return this.lineGenerator(arr)\n  },\n\n    circleMemories: function() {\n      if(!this.memories && !this.scales) return null\n      let arr = this.memories\n      let slopeDomain = d3.extent(this.parsedCases, d=>d.slope)\n\n      if(arr && arr.length > 0) { //compute x/y coordinates for all memories (before turning them into a beeswarm)\n        //arr = arr.filter(memory => memory.date == memory.enddate) //only get memories that are only one day long\n        arr.forEach((memory,i)=> {\n          \n          let slope = this.getLineElement(memory.date).slope\n          let maxSlope = slope >= 0 ? slopeDomain[1] : slopeDomain [0] //if slope is negative, use negativ max to compute distance\n          let sign = (i%2) ? -1 : 1 //split into a line above and one below\n          let changeY = sign * (Math.abs(maxSlope) -  Math.abs(slope)) * (1/this.forceDistance) //change on y axis decreases as slope gets higher\n          let changeX = sign * (maxSlope  - slope) * (1/this.forceDistance) //change on y axis decreases as slope gets higher\n          memory.y = this.scales.y(this.getLineElement(memory.date).value) + changeY\n          memory.x = this.scales.x(this.parseDate(memory.date)) + changeX\n          memory.radius = this.scales.radius(memory.weight)\n        })\n      }\n      return arr\n    },\n\n    /*lineMemories: function() {\n      if(!this.memories && !this.scales) {console.log(this.memories,this.scales); return null} \n      let arr = this.memories\n      if(arr.length > 0) {\n        arr = arr.filter(memory => memory.date != memory.enddate)\n        arr.forEach((memory,i)=> {\n          let segment = this.getLineSegment(memory.date,memory.enddate)\n          if(segment.length > 0) segment.forEach(s => s.y = s.y - 5) \n          if(i==1)console.log(segment,this.lineGenerator(segment))\n          memory.path = this.lineGenerator(segment)\n        })\n      }\n      return arr\n    },*/\n\n\n    \n  beeswarm: function(){\n    if(!this.circleMemories) return null\n    let force = d3.forceSimulation(this.circleMemories)\n      .force('forceX', d3.forceX(memory => memory.x).strength(.1))\n      .force('forceY', d3.forceY(memory => memory.y).strength(.1))\n      .force('collide', d3.forceCollide(d => d.radius + .5))\n    for (let i = 0; i < 100; ++i) {\n      force.tick()\n    }\n    return force.nodes()\n  },\n},\n\nwatch: {\n  beeswarm: function(arr) { //show circle on overlay after beeswarm changed\n    let c = arr.filter(e=>e.active)[0]\n    if(c) {\n      this.currentMemory = c\n       this.currentMemory.connector = `\n        M${c.x} ${c.y}\n        Q${(this.options.dimensions.width/2)} ${c.y}\n        ${(this.options.dimensions.width/2)} ${(this.options.dimensions.height/2)}`;\n    }\n  }\n},\n\n  async mounted() {\n    this.mounted = true;\n    document.addEventListener('mousemove', this.onMouseMove)\n    /*document.addEventListener('mousedown', this.onMouseDown)\n    document.addEventListener('mouseup', this.onMouseUp)*/\n  },\n\n  methods: {\n    hover: function(memory,event) { //hovering circles\n      if(!this.datePicker) {  //disable hover when memory adding is in progress\n        let r = 10\n        let opacity = 1\n        if(event.type == 'mouseout') {\n          r = memory.weight\n          opacity = this.opacity\n       }\n       d3.select(event.target).transition(\"50\").attr(\"r\",r).attr(\"opacity\",opacity)\n      }\n    },\n\n    getLineElement: function(dateString) {\n      let valueOnMemoryDate = this.parsedCases.find(c => dateString == c.dateString)\n      return valueOnMemoryDate ? valueOnMemoryDate : null\n    },\n\n    getLineSegment: function(startDate,endDate) {\n      startDate = (typeof startDate === 'string') ? this.parseDate(startDate) : startDate\n      endDate = (typeof endDate === 'string') ? this.parseDate(endDate) : endDate\n      let segment = this.parsedCases.filter(c => //get parts of the caseLine that match current dates\n            (c.date < endDate && c.date > startDate) //forward movement\n            || (c.date > endDate && c.date < startDate) //backward movement\n          )\n      return segment\n    },\n\n    onMouseMove: function(event) { //follow line\n      if(this.datePicker) {\n        let date = this.scales.x.invert(event.clientX)\n        let dateString = this.formatDate(date)\n        let value = this.scales.y(this.getLineElement(dateString).value)\n        Vue.set(this.newMemory,'date',date) //also move circle\n        Vue.set(this.newMemory.position,'x',event.clientX) //also move circle\n        Vue.set(this.newMemory.position,'y',value)\n      }\n    },\n\n    //alternative interaction with dragging a line\n    /*onMouseMove: function(event) { //follow line\n      if(this.dateSelector) {\n        let endDate = this.scales.x.invert(event.clientX)\n        let dateString = this.formatDate(endDate)\n        let value = this.scales.y(this.getLineElement(dateString).value)\n\n        if(this.mouseDown) { //if mouse if pressed\n          let arr = this.getLineSegment(this.newMemory.startDate,endDate)\n          Vue.set(this.newMemory,'line', this.lineGenerator(arr)) //create svg Line\n        }\n        Vue.set(this.newMemory.circle,'x',event.clientX) //also move circle\n        Vue.set(this.newMemory.circle,'y',value)\n      }\n    },\n\n    onMouseDown: function(event) { //follow line\n      if(this.dateSelector) {\n        this.mouseDown = true\n        let exactDate = this.scales.x.invert(event.clientX)\n        Vue.set(this.newMemory,'startDate',exactDate)\n      }\n    },\n\n    onMouseUp: function(event) { //follow line\n      if(this.dateSelector) {\n        this.mouseDown = false\n        let exactDate = this.scales.x.invert(event.clientX)\n        exactDate\n      }\n    },*/\n  },\n\n  directives: { //axis computation\n    axis(el, binding) {\n      let axis = d3.select(el)\n      switch(binding.arg) {\n        case \"x\":\n          axis.call(d3\n            .axisBottom(binding.value.x)\n            .ticks(d3.timeMonth)\n            .tickFormat(d3.timeFormat(\"%b\"))\n          );\n          axis.selectAll(\".domain\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick line\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick text\")\n            .style(\"text-anchor\", \"end\")\n            .style(\"text-transform\", \"UPPERCASE\")\n            .style(\"opacity\", .3)\n          break;\n        case \"y\":\n          axis.call(d3\n            .axisRight(binding.value.y)\n            .tickSize(-1000)\n            .ticks(5)\n          );\n          axis.selectAll(\".domain\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick line\").attr(\"opacity\",.05)\n          axis.selectAll(\".tick text\").attr(\"opacity\",.3)\n          break;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.datePicker {\n  cursor: pointer;\n}\n\n.datePicker text {\n  font-size: 10px;\n  pointer-events: none;\n}\n\n.datePicker text.strong {\n  font-weight: bold;\n}\n</style>\n"],"sourceRoot":"src/components"}]}