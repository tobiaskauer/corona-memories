{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/vis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/vis.vue","mtime":1613591321229},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3RrL0dpdEh1Yi9jb3JvbmEtbWVtb3JpZXMvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhcnNlRGF0ZTogZDMudXRjUGFyc2UoIiVZLSVtLSVkIiksCiAgICAgIG1vdW50ZWQ6IGZhbHNlLAogICAgICBvcGFjaXR5OiAwLjcsCiAgICAgIGZvcmNlRGlzdGFuY2U6IDYKICAgIH07CiAgfSwKICBwcm9wczogewogICAgZGltZW5zaW9uczogT2JqZWN0LAogICAgY2FzZXM6IEFycmF5LAogICAgbWV0cmljOiBTdHJpbmcsCiAgICBtZW1vcmllczogQXJyYXkKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwYXJzZWRDYXNlczogZnVuY3Rpb24gcGFyc2VkQ2FzZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy5jYXNlcy5tYXAoZnVuY3Rpb24gKGMpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgZGF0ZTogX3RoaXMucGFyc2VEYXRlKGMuZCksCiAgICAgICAgICByZWxhdGl2ZTogYy5yLAogICAgICAgICAgY3VtdWxhdGl2ZTogYy5jLAogICAgICAgICAgbmV3OiBjLm4KICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBzY2FsZXM6IGZ1bmN0aW9uIHNjYWxlcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMucGFyc2VkQ2FzZXMpIHJldHVybiBudWxsOwogICAgICB2YXIgeURvbWFpbiA9IGQzLmV4dGVudCh0aGlzLnBhcnNlZENhc2VzLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkW190aGlzMi5tZXRyaWNdOwogICAgICB9KTsKICAgICAgdmFyIHhEb21haW4gPSBkMy5leHRlbnQodGhpcy5wYXJzZWRDYXNlcywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5kYXRlOwogICAgICB9KTsKICAgICAgcmV0dXJuIHsKICAgICAgICB4OiBkMy5zY2FsZVRpbWUoKS5kb21haW4oeERvbWFpbikucmFuZ2UoW3RoaXMuZGltZW5zaW9ucy5sZWZ0LCB0aGlzLmRpbWVuc2lvbnMud2lkdGggLSB0aGlzLmRpbWVuc2lvbnMubGVmdCAtIHRoaXMuZGltZW5zaW9ucy5yaWdodF0pLAogICAgICAgIHk6IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKHlEb21haW4pLnJhbmdlKFt0aGlzLmRpbWVuc2lvbnMuaGVpZ2h0IC0gdGhpcy5kaW1lbnNpb25zLmJvdHRvbSAtIHRoaXMuZGltZW5zaW9ucy50b3AsIHRoaXMuZGltZW5zaW9ucy50b3BdKQogICAgICB9OwogICAgfSwKICAgIGJlZXN3YXJtOiBmdW5jdGlvbiBiZWVzd2FybSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMubWVtb3JpZXMpIHJldHVybiBudWxsOwogICAgICB2YXIgZm9yY2UgPSBkMy5mb3JjZVNpbXVsYXRpb24odGhpcy5tZW1vcmllcykgLy8uZm9yY2UoJ2ZvcmNlWCcsIGQzLmZvcmNlWChtZW1vcnkgPT4gdGhpcy5zY2FsZXMueCh0aGlzLnBhcnNlRGF0ZShtZW1vcnkuZGF0ZSkpKS5zdHJlbmd0aCguMSkpCiAgICAgIC5mb3JjZSgnZm9yY2VYJywgZDMuZm9yY2VYKGZ1bmN0aW9uIChtZW1vcnksIGkpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLnNjYWxlcy54KF90aGlzMy5wYXJzZURhdGUobWVtb3J5LmRhdGUpKSArICgtX3RoaXMzLmZvcmNlRGlzdGFuY2UgKyBpICUgMiAqIChfdGhpczMuZm9yY2VEaXN0YW5jZSAqIDIpKTsKICAgICAgfSkuc3RyZW5ndGgoLjEpKS5mb3JjZSgnZm9yY2VZJywgZDMuZm9yY2VZKGZ1bmN0aW9uIChtZW1vcnksIGkpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLnNjYWxlcy55KG1lbW9yeS52YWx1ZSkgKyAoLV90aGlzMy5mb3JjZURpc3RhbmNlICsgaSAlIDIgKiAoX3RoaXMzLmZvcmNlRGlzdGFuY2UgKiAyKSk7CiAgICAgIH0pLnN0cmVuZ3RoKC4xKSkuZm9yY2UoJ2NvbGxpZGUnLCBkMy5mb3JjZUNvbGxpZGUoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC53ZWlnaHQ7CiAgICAgIH0pKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5tZW1vcmllcy5sZW5ndGg7ICsraSkgewogICAgICAgIGZvcmNlLnRpY2soKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZvcmNlLm5vZGVzKCk7CiAgICB9LAogICAgbGluZTogZnVuY3Rpb24gbGluZSgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMuY2FzZXMgfHwgIXRoaXMuc2NhbGVzKSByZXR1cm4gZmFsc2U7CiAgICAgIHZhciBsaW5lR2VuZXJhdG9yID0gZDMubGluZSgpIC8vLmN1cnZlKGQzLmN1cnZlQmFzaXMpCiAgICAgIC54KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIF90aGlzNC5zY2FsZXMueChkLmRhdGUpOwogICAgICB9KS55KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIF90aGlzNC5zY2FsZXMueShkW190aGlzNC5tZXRyaWNdKTsKICAgICAgfSk7CiAgICAgIHJldHVybiBsaW5lR2VuZXJhdG9yKHRoaXMucGFyc2VkQ2FzZXMpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpczUubW91bnRlZCA9IHRydWU7CiAgICAgICAgICAgICAgLyp0aGlzLmNvdW50cmllcyA9IChhd2FpdCBnZXRDYXNlc1NlcnZpY2UuZ2V0Q291bnRyaWVzKCkpLmRhdGEubWFwKGUgPT4gZS5jb3VudHJ5KQogICAgICAgICAgICAgIGxldCBmb3JtYXRUaW1lID0gZDMudGltZUZvcm1hdCgiJVktJW0tJWQiKQogICAgICAgICAgICAgIGxldCByZWFjdGlvbkFyciA9IFtdIC8vY3JlYXRlIHNhbXBsZSByZWFjdGlvbnMKICAgICAgICAgICAgICBkMy5yYW5nZSg1MDAwMCkuZm9yRWFjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICBsZXQgZGF0ZSA9IHRoaXMuZ2V0UmFuZG9tRGF0ZSh0aGlzLnNjYWxlcy54LmRvbWFpbigpKQogICAgICAgICAgICAgICAgcmVhY3Rpb25BcnIucHVzaCh7CiAgICAgICAgICAgICAgICAgIGRhdGU6IGZvcm1hdFRpbWUoZGF0ZSksCiAgICAgICAgICAgICAgICAgIHZhbHVlOiB0aGlzLnBhcnNlZENhc2VzLmZpbmQoYyA9PiBmb3JtYXRUaW1lKGMuZGF0ZSkgPT0gZm9ybWF0VGltZShkYXRlKSlbdGhpcy5tZXRyaWNdLAogICAgICAgICAgICAgICAgICBjb21tZW50OiAiZm9vYmFyIiwKICAgICAgICAgICAgICAgICAgd2VpZ2h0OiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMysyKSwKICAgICAgICAgICAgICAgICAgY291bnRyeTogdGhpcy5jb3VudHJpZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnRoaXMuY291bnRyaWVzLmxlbmd0aCldLAogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZWFjdGlvbkFycikpKi8KCiAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFJhbmRvbURhdGU6IGZ1bmN0aW9uIGdldFJhbmRvbURhdGUoZXh0ZW50KSB7CiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoZXh0ZW50WzBdLmdldFRpbWUoKSArIE1hdGgucmFuZG9tKCkgKiAoZXh0ZW50WzFdLmdldFRpbWUoKSAtIGV4dGVudFswXS5nZXRUaW1lKCkpKTsKICAgICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwKTsKICAgICAgcmV0dXJuIGRhdGU7CiAgICB9LAogICAgaG92ZXI6IGZ1bmN0aW9uIGhvdmVyKHJlYWN0aW9uLCBldmVudCkgewogICAgICB2YXIgciA9IDEwOwogICAgICB2YXIgb3BhY2l0eSA9IDE7CgogICAgICBpZiAoZXZlbnQudHlwZSA9PSAnbW91c2VvdXQnKSB7CiAgICAgICAgciA9IHJlYWN0aW9uLndlaWdodDsKICAgICAgICBvcGFjaXR5ID0gdGhpcy5vcGFjaXR5OwogICAgICB9CgogICAgICBkMy5zZWxlY3QoZXZlbnQudGFyZ2V0KS50cmFuc2l0aW9uKCI1MCIpLmF0dHIoInIiLCByKS5hdHRyKCJvcGFjaXR5Iiwgb3BhY2l0eSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["vis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,KAAA,EAAA,MAAA,IAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA,GAHA;AAIA,MAAA,aAAA,EAAA;AAJA,KAAA;AAMA,GARA;AAUA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA,MADA;AAEA,IAAA,KAAA,EAAA,KAFA;AAGA,IAAA,MAAA,EAAA,MAHA;AAIA,IAAA,QAAA,EAAA;AAJA,GAVA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,WAAA,EAAA,uBAAA;AAAA;;AACA,aAAA,KAAA,KAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA;AACA,UAAA,IAAA,EAAA,KAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CADA;AAEA,UAAA,QAAA,EAAA,CAAA,CAAA,CAFA;AAGA,UAAA,UAAA,EAAA,CAAA,CAAA,CAHA;AAIA,UAAA,GAAA,EAAA,CAAA,CAAA;AAJA,SAAA;AAMA,OAPA,CAAA;AAQA,KAVA;AAYA,IAAA,MAAA,EAAA,kBAAA;AAAA;;AACA,UAAA,CAAA,KAAA,WAAA,EAAA,OAAA,IAAA;AAEA,UAAA,OAAA,GAAA,EAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AAAA,OAAA,CAAA;AACA,UAAA,OAAA,GAAA,EAAA,CAAA,MAAA,CAAA,KAAA,WAAA,EAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA;AAAA,OAAA,CAAA;AACA,aAAA;AACA,QAAA,CAAA,EAAA,EAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,KAAA,UAAA,CAAA,IAAA,EAAA,KAAA,UAAA,CAAA,KAAA,GAAA,KAAA,UAAA,CAAA,IAAA,GAAA,KAAA,UAAA,CAAA,KAAA,CAAA,CADA;AAEA,QAAA,CAAA,EAAA,EAAA,CAAA,WAAA,GAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,KAAA,UAAA,CAAA,MAAA,GAAA,KAAA,UAAA,CAAA,MAAA,GAAA,KAAA,UAAA,CAAA,GAAA,EAAA,KAAA,UAAA,CAAA,GAAA,CAAA;AAFA,OAAA;AAIA,KArBA;AAuBA,IAAA,QAAA,EAAA,oBAAA;AAAA;;AACA,UAAA,CAAA,KAAA,QAAA,EAAA,OAAA,IAAA;AAGA,UAAA,KAAA,GAAA,EAAA,CAAA,eAAA,CAAA,KAAA,QAAA,EACA;AADA,OAEA,KAFA,CAEA,QAFA,EAEA,EAAA,CAAA,MAAA,CAAA,UAAA,MAAA,EAAA,CAAA;AAAA,eAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,aAAA,GAAA,CAAA,GAAA,CAAA,IAAA,MAAA,CAAA,aAAA,GAAA,CAAA,CAAA,CAAA;AAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAFA,EAGA,KAHA,CAGA,QAHA,EAGA,EAAA,CAAA,MAAA,CAAA,UAAA,MAAA,EAAA,CAAA;AAAA,eAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,KAAA,CAAA,MAAA,CAAA,aAAA,GAAA,CAAA,GAAA,CAAA,IAAA,MAAA,CAAA,aAAA,GAAA,CAAA,CAAA,CAAA;AAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAHA,EAIA,KAJA,CAIA,SAJA,EAIA,EAAA,CAAA,YAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA;AAAA,OAAA,CAJA,CAAA;;AAKA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,QAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA;AACA;;AACA,aAAA,KAAA,CAAA,KAAA,EAAA;AAEA,KArCA;AAuCA,IAAA,IAAA,EAAA,gBAAA;AAAA;;AACA,UAAA,CAAA,KAAA,KAAA,IAAA,CAAA,KAAA,MAAA,EAAA,OAAA,KAAA;AAEA,UAAA,aAAA,GAAA,EAAA,CAAA,IAAA,GACA;AADA,OAEA,CAFA,CAEA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAAA,OAFA,EAGA,CAHA,CAGA,UAAA,CAAA;AAAA,eAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;AAAA,OAHA,CAAA;AAKA,aAAA,aAAA,CAAA,KAAA,WAAA,CAAA;AAEA;AAjDA,GAjBA;AAsEA,EAAA,OAtEA,qBAsEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,MAAA,CAAA,OAAA,GAAA,IAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA,GA1FA;AA4FA,EAAA,OAAA,EAAA;AACA,IAAA,aAAA,EAAA,uBAAA,MAAA,EAAA;AACA,UAAA,IAAA,GAAA,IAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,OAAA,KAAA,IAAA,CAAA,MAAA,MAAA,MAAA,CAAA,CAAA,CAAA,CAAA,OAAA,KAAA,MAAA,CAAA,CAAA,CAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AACA,MAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA,aAAA,IAAA;AACA,KALA;AAOA,IAAA,KAAA,EAAA,eAAA,QAAA,EAAA,KAAA,EAAA;AACA,UAAA,CAAA,GAAA,EAAA;AACA,UAAA,OAAA,GAAA,CAAA;;AACA,UAAA,KAAA,CAAA,IAAA,IAAA,UAAA,EAAA;AACA,QAAA,CAAA,GAAA,QAAA,CAAA,MAAA;AACA,QAAA,OAAA,GAAA,KAAA,OAAA;AACA;;AACA,MAAA,EAAA,CAAA,MAAA,CAAA,KAAA,CAAA,MAAA,EAAA,UAAA,CAAA,IAAA,EAAA,IAAA,CAAA,GAAA,EAAA,CAAA,EAAA,IAAA,CAAA,SAAA,EAAA,OAAA;AACA;AAfA;AA5FA,CAAA","sourcesContent":["<template>\n  <svg :width=\"dimensions.width\" :height=\"dimensions.height\" v-if=\"mounted\">\n\n      <path\n        :d=\"line\"\n        stroke-width=\"3\"\n        fill=\"none\"\n        stroke=\"black\"/>\n\n    <g class=\"memories\" v-if=\"beeswarm\" transform=\"translate(0,0)\">\n      <circle\n        v-for=\"memory, j in beeswarm\"\n        :key=\"j\"\n        :cx=\"memory.x\"\n        :cy=\"memory.y\"\n        :opacity=\"opacity\"\n        :r=\"memory.weight\"\n        fill=\"#FA5E2D\"\n        @mouseover=\"hover(memory,$event)\"\n        @mouseout=\"hover(memory,$event)\" />\n    </g>\n  </svg>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n  data () {\n    return {\n      parseDate: d3.utcParse(\"%Y-%m-%d\"),\n      mounted: false,\n      opacity: 0.7,\n      forceDistance: 6\n    }\n  },\n\n  props: {\n    dimensions: Object,\n    cases: Array,\n    metric: String,\n    memories: Array\n  },\n\n  computed: {\n    parsedCases: function() {\n      return this.cases.map(c => {\n        return {\n          date: this.parseDate(c.d),\n          relative: c.r,\n          cumulative: c.c,\n          new: c.n\n        }\n      })\n    },\n\n    scales: function() {\n      if(!this.parsedCases) return null\n\n      let yDomain = d3.extent(this.parsedCases, d=>d[this.metric])\n      let xDomain = d3.extent(this.parsedCases, d=>d.date)\n      return {\n        x: d3.scaleTime().domain(xDomain).range([this.dimensions.left,this.dimensions.width-this.dimensions.left-this.dimensions.right]),\n        y: d3.scaleLinear().domain(yDomain).range([this.dimensions.height-this.dimensions.bottom-this.dimensions.top,this.dimensions.top])\n      }\n    },\n\n    beeswarm: function(){\n      if(!this.memories) return null\n\n\n      let force = d3.forceSimulation(this.memories)\n       //.force('forceX', d3.forceX(memory => this.scales.x(this.parseDate(memory.date))).strength(.1))\n       .force('forceX', d3.forceX((memory,i) => this.scales.x(this.parseDate(memory.date))+ (-this.forceDistance + (i%2)*(this.forceDistance * 2)) ).strength(.1))\n       .force('forceY', d3.forceY((memory,i) => this.scales.y(memory.value) + (-this.forceDistance + (i%2)*(this.forceDistance * 2))).strength(.1))\n       .force('collide', d3.forceCollide(d => d.weight))\n     for (let i = 0; i < this.memories.length; ++i) {\n       force.tick()\n     }\n     return force.nodes()\n\n   },\n\n    line: function() {\n      if(!this.cases || !this.scales) return false\n\n      const lineGenerator = d3.line()\n        //.curve(d3.curveBasis)\n        .x(d => this.scales.x(d.date))\n        .y(d => this.scales.y(d[this.metric]))\n\n    return lineGenerator(this.parsedCases)\n\n  },\n},\n\n\n  async mounted() {\n    this.mounted = true;\n\n\n\n    /*this.countries = (await getCasesService.getCountries()).data.map(e => e.country)\n    let formatTime = d3.timeFormat(\"%Y-%m-%d\")\n    let reactionArr = [] //create sample reactions\n    d3.range(50000).forEach(() => {\n      let date = this.getRandomDate(this.scales.x.domain())\n      reactionArr.push({\n        date: formatTime(date),\n        value: this.parsedCases.find(c => formatTime(c.date) == formatTime(date))[this.metric],\n        comment: \"foobar\",\n        weight: Math.floor(Math.random()*3+2),\n        country: this.countries[Math.floor(Math.random()*this.countries.length)],\n      })\n    })\n\n    console.log(JSON.stringify(reactionArr))*/\n  },\n\n  methods: {\n    getRandomDate: function(extent) {\n      let date = new Date(extent[0].getTime() + Math.random() * (extent[1].getTime() - extent[0].getTime()))\n      date.setHours(0,0,0)\n      return date\n    },\n\n    hover: function(reaction,event) {\n      let r = 10\n      let opacity = 1\n      if(event.type == 'mouseout') {\n        r = reaction.weight\n        opacity = this.opacity\n      }\n      d3.select(event.target).transition(\"50\").attr(\"r\",r).attr(\"opacity\",opacity)\n    }\n\n  }\n}\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}