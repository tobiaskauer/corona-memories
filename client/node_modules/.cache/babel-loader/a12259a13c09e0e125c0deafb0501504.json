{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/components/vis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/components/vis.vue","mtime":1614603232961},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["vis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <svg :width=\"dimensions.width\" :height=\"dimensions.height\" v-if=\"mounted\" z-index=\"5\">\n    \n    <filter id=\"blurMe\">\n      <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"1\" />\n    </filter>\n    \n    <g class=\"axis xAxis\" v-axis:x=\"scales\" :transform=\"`translate(0,${dimensions.height-dimensions.top-dimensions.bottom+10})`\"></g>\n    <g class=\"axis yAxis\" v-axis:y=\"scales\" :transform=\"`translate(${dimensions.width-dimensions.right})`\"></g>\n\n    <path\n      :d=\"caseLine\"\n      stroke-width=\"3\"\n      fill=\"none\"\n      stroke=\"black\"/>\n\n    <g class=\"memories\"transform=\"translate(0,0)\">\n      <g if=\"beeswarm\">\n        <g v-for=\"memory, j in beeswarm\" :key=\"j\">\n          <circle\n            :cx=\"memory.x\"\n            :cy=\"memory.y\"\n            :opacity=\"opacity\"\n            :r=\"memory.weight\"\n            fill=\"#FA5E2D\"\n            :filter=\"(overlay) ? 'url(#blurMe)' : ''\"\n\n            @click=\"$emit('showMemory',memory)\"\n            @mouseover=\"hover(memory,$event)\"\n            @mouseout=\"hover(memory,$event)\" />\n\n          <!--<text\n            :x=\"memory.x\"\n            :y=\"memory.y\"\n           fill=\"#FA5E2D\"\n            @click=\"$emit('showMemory',memory)\"\n            @mouseover=\"hover(memory,$event)\"\n            @mouseout=\"hover(memory,$event)\">{{memory.comment}}\n            </text>-->\n        </g> <!-- circleMemories </g>-->\n      </g>\n\n      <g v-for=\"(memory, k) in lineMemories\" :key=\"'line-'+k\" >\n        <path v-if=\"memory.path\" stroke-linecap=\"round\" :opacity=\"opacity\" stroke-dasharray=\"1 5\" stroke-width=\"2\" :d=\"memory.path\" stroke=\"#FA5E2D\" fill=\"none\" />\n      </g>\n    </g>\n\n        \n\n  \n\n    <!--<g class=\"dateSelector\" @click=\"$emit('showForm', formatDate(newMemory.date))\" v-if=\"dateSelector\">-->\n    <g class=\"dateSelector\" v-if=\"dateSelector\">\n      <circle r=\"25\" cx=\"0\" cy=\"0\" fill=\"#FA5E2D\"  :transform=\"`translate(${newMemory.circle.x},${newMemory.circle.y})`\" />\n      <!--<path d=\"M6 0H9V6H15V9H9V15H6V9H0V6H6V0Z\" fill=\"white\" transform=\"translate(-7,-15)\" />-->\n      <text v-if=\"newMemory.date\" fill=\"white\" font-size=\"10px\"  :transform=\"`translate(${newMemory.circle.x},${newMemory.circle.y})`\" text-anchor=\"middle\">{{shortFormatDate(newMemory.startDate)}}</text>\n      <!--<path v-if=\"newMemory.line\" :d=\"newMemory.line\" stroke=\"#FA5E2D\" fill=\"none\" stroke-width=\"8\" />-->\n    </g>\n\n    <g class=\"overlay\" v-if=\"overlay\">\n      <rect x=\"0\" y=\"0\" :width=\"dimensions.width\" :height=\"dimensions.height\" fill=\"black\" opacity=\".5\" pointer-events=\"none\"/>\n      <g v-if=\"currentMemory\">\n\n        <circle\n          r=20\n          :cx=\"currentMemory.x\"\n          :cy=\"currentMemory.y\"\n          fill=\"#FA5E2D\" />\n\n        <path\n          :d=\"currentMemory.connector\"\n          stroke-width=\"2\"\n          fill=\"none\"\n          stroke=\"#FA5E2D\"/>\n\n      </g>\n    </g>\n  </svg>\n</template>\n\n<script>\nimport Vue from 'vue'\n\nimport * as d3 from 'd3'\n\nexport default {\n  data () {\n    return {\n      parseDate: d3.utcParse(\"%Y-%m-%d\"),\n      formatDate: d3.timeFormat(\"%Y-%m-%d\"),\n      shortFormatDate: d3.timeFormat(\"%b %d\"),\n      lineGenerator: d3.line().curve(d3.curveBasis).x(d => d.x).y(d => d.y),\n      mounted: false,\n      mouseDown: false,\n      opacity: 0.7, //circle opacity when not hovered\n      forceDistance: 5, //distance of reactions to line\n      linePosition: [0,0], //x and y of line overlay to add new memories\n      currentMemory: null, //when currently displaying a memory, pick the right one to highlight\n      newMemory: {\n        startDate: null,\n        endDate: null,\n        show: false,\n        circle: {x: 0, y: 0},\n        line: false,\n      },\n    }\n  },\n\n  props: {\n    dimensions: Object,\n    cases: Array,\n    memories: Array,\n    dateSelector: Boolean,\n    overlay: Boolean,\n\n  },\n\n  computed: {\n    parsedCases: function() {\n      return this.cases.map(c => {\n        return {\n          dateString: c.d,\n          date: this.parseDate(c.d),\n          value: c.v\n        }\n      })\n    },\n\n    scales: function() {\n      if(!this.parsedCases) return null\n\n      let yDomain = [0,d3.max([50,d3.max(this.parsedCases, d=>d.value)])] //minimum of 50 cases to have a somewhat consistent layout\n      let xDomain = d3.extent(this.parsedCases, d=>d.date)\n      let x = d3.scaleTime().domain(xDomain).range([this.dimensions.left,this.dimensions.width-this.dimensions.right])\n      let y = d3.scaleLinear().domain(yDomain).range([this.dimensions.height-this.dimensions.bottom-this.dimensions.top,this.dimensions.top])\n      \n      return {x: x, y: y}\n    },\n\n    circleMemories: function() {\n      if(!this.memories && !this.scales) return null\n      let arr = this.memories\n      if(arr && arr.length > 0) {\n        arr = arr.filter(memory => memory.date == memory.enddate)\n        arr.forEach(memory=> {\n          memory.y = this.scales.y(this.getYforDate(memory.date))\n          memory.x = this.scales.x(this.parseDate(memory.date))\n        })\n      }\n      return arr\n    },\n\n    lineMemories: function() {\n      if(!this.memories && !this.scales) {console.log(this.memories,this.scales); return null} \n      let arr = this.memories\n      if(arr.length > 0) {\n        arr = arr.filter(memory => memory.date != memory.enddate)\n        arr.forEach((memory,i)=> {\n          let segment = this.getLineSegment(memory.date,memory.enddate)\n          if(segment.length > 0) segment.forEach(s => s.y = s.y - 5) \n          if(i==1)console.log(segment,this.lineGenerator(segment))\n          memory.path = this.lineGenerator(segment)\n        })\n      }\n      return arr\n    },\n\n\n    beeswarm: function(){\n      if(!this.circleMemories) return null\n\n      let force = d3.forceSimulation(this.circleMemories)\n       .force('forceX', d3.forceX(memory => memory.x).strength(.1))\n       //.force('forceX', d3.forceX((memory,i) => memory.x + (-this.forceDistance + (i%2)*(this.forceDistance * 2)) ).strength(.1))\n       //.force('forceY', d3.forceY((memory,i) => memory.y + (-this.forceDistance + (i%2)*(this.forceDistance * 2))).strength(.1))\n       .force('forceY', d3.forceY(memory => memory.y+10).strength(.1))\n       .force('collide', d3.forceCollide(d => d.weight))\n     for (let i = 0; i < 10; ++i) {\n       force.tick()\n     }\n     return force.nodes()\n   },\n\n    caseLine: function() {\n      if(!this.scales) return false\n\n      let arr = this.parsedCases.map(c => {\n        c.x = this.scales.x(c.date)\n        c.y = this.scales.y(c.value)\n        return c;\n      })\n    return this.lineGenerator(arr)\n  },\n},\n\nwatch: {\n  beeswarm: function(arr) { //show circle on overlay after beeswarm changed\n    let c = arr.filter(e=>e.active)[0]\n    if(c) {\n      this.currentMemory = c\n       this.currentMemory.connector = `\n        M${c.x} ${c.y}\n        Q${(this.dimensions.width/2)} ${c.y}\n        ${(this.dimensions.width/2)} ${(this.dimensions.height/2)}`;\n    }\n  }\n},\n\n\n  async mounted() {\n    this.mounted = true;\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('mousedown', this.onMouseDown)\n    document.addEventListener('mouseup', this.onMouseUp)\n  },\n\n  methods: {\n    hover: function(memory,event) { //hovering circles\n      if(!this.dateSelector) {  //disable hover when memory adding is in progress\n        let r = 10\n        let opacity = 1\n        if(event.type == 'mouseout') {\n          r = memory.weight\n          opacity = this.opacity\n       }\n       d3.select(event.target).transition(\"50\").attr(\"r\",r).attr(\"opacity\",opacity)\n      }\n    },\n\n    getYforDate: function(dateString) {\n      let valueOnMemoryDate = this.parsedCases.find(c => dateString == c.dateString)\n      return valueOnMemoryDate ? valueOnMemoryDate.value : 0\n    },\n\n    getLineSegment: function(startDate,endDate) {\n      \n      startDate = (typeof startDate === 'string') ? this.parseDate(startDate) : startDate\n      endDate = (typeof endDate === 'string') ? this.parseDate(endDate) : endDate\n      let segment = this.parsedCases.filter(c => //get parts of the caseLine that match current dates\n            (c.date < endDate && c.date > startDate) //forward movement\n            || (c.date > endDate && c.date < startDate) //backward movement\n          )\n      return segment\n    },\n\n    \n\n    onMouseMove: function(event) { //follow line\n      if(this.dateSelector) {\n        let endDate = this.scales.x.invert(event.clientX)\n        let dateString = this.formatDate(endDate)\n        let value = this.scales.y(this.getYforDate(dateString))\n\n        if(this.mouseDown) { //if mouse if pressed\n          let arr = this.getLineSegment(this.newMemory.startDate,endDate)\n          Vue.set(this.newMemory,'line', this.lineGenerator(arr)) //create svg Line\n        }\n        Vue.set(this.newMemory.circle,'x',event.clientX) //also move circle\n        Vue.set(this.newMemory.circle,'y',value)\n      }\n    },\n\n    onMouseDown: function(event) { //follow line\n      if(this.dateSelector) {\n        this.mouseDown = true\n        let exactDate = this.scales.x.invert(event.clientX)\n        Vue.set(this.newMemory,'startDate',exactDate)\n      }\n    },\n\n    onMouseUp: function(event) { //follow line\n      if(this.dateSelector) {\n        this.mouseDown = false\n        let exactDate = this.scales.x.invert(event.clientX)\n        exactDate\n        \n      }\n    },\n\n\n  },\n\n  directives: { //axis computation\n    axis(el, binding) {\n      let axis = d3.select(el)\n      switch(binding.arg) {\n        case \"x\":\n          axis.call(d3\n            .axisBottom(binding.value.x)\n            .ticks(d3.timeMonth)\n            .tickFormat(d3.timeFormat(\"%b\"))\n          );\n          axis.selectAll(\".domain\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick line\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick text\")\n            .style(\"text-anchor\", \"end\")\n            .style(\"text-transform\", \"UPPERCASE\")\n            .style(\"opacity\", .3)\n          break;\n        case \"y\":\n          axis.call(d3\n            .axisRight(binding.value.y)\n            .tickSize(-1000)\n            .ticks(5)\n          );\n          axis.selectAll(\".domain\").attr(\"stroke\",\"none\")\n          axis.selectAll(\".tick line\").attr(\"opacity\",.05)\n          axis.selectAll(\".tick text\").attr(\"opacity\",.3)\n          break;\n      }\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}