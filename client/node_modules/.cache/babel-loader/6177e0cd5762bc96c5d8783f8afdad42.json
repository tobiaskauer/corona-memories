{"remainingRequest":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js!/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tk/GitHub/corona-memories/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tk/GitHub/corona-memories/client/src/App.vue","mtime":1613564212562},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tk/GitHub/corona-memories/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5mcm9tLWVudHJpZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgbWVtb3J5Rm9ybSBmcm9tICcuL2NvbXBvbmVudHMvbWVtb3J5Rm9ybSc7CmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcHAnLAogIGNvbXBvbmVudHM6IHsKICAgIG1lbW9yeUZvcm06IG1lbW9yeUZvcm0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50Q291bnRyeTogJ0dlcm1hbnknLAogICAgICBtb3VudGVkOiBmYWxzZSwKICAgICAgb3BhY2l0eTogLjcsCiAgICAgIHdpZHRoOiAwLAogICAgICBoZWlnaHQ6IDAsCiAgICAgIG1hcmdpbjogewogICAgICAgIHRvcDogNTAsCiAgICAgICAgcmlnaHQ6IDUwLAogICAgICAgIGJvdHRvbTogNTAsCiAgICAgICAgbGVmdDogNTAKICAgICAgfSwKICAgICAgbWV0cmljOiAncmVsYXRpdmUnLAogICAgICBjc3Y6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgc2NhbGVzOiBmdW5jdGlvbiBzY2FsZXMoKSB7CiAgICAgIGlmICghdGhpcy5jc3YpIHJldHVybiBudWxsOwogICAgICB2YXIgeURvbWFpbiA9IFswLCAyMDBdOyAvL2QzLm1heCh0aGlzLmNzdiwgZD0+K2RbdGhpcy5tZXRyaWNdKV0KCiAgICAgIHZhciB4RG9tYWluID0gZDMuZXh0ZW50KHRoaXMuY3N2LCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmRhdGU7CiAgICAgIH0pOwogICAgICByZXR1cm4gewogICAgICAgIHg6IGQzLnNjYWxlVGltZSgpLmRvbWFpbih4RG9tYWluKS5yYW5nZShbdGhpcy5tYXJnaW4ubGVmdCwgdGhpcy53aWR0aCAtIHRoaXMubWFyZ2luLmxlZnQgLSB0aGlzLm1hcmdpbi5yaWdodF0pLAogICAgICAgIHk6IGQzLnNjYWxlTGluZWFyKCkuZG9tYWluKHlEb21haW4pLnJhbmdlKFt0aGlzLmhlaWdodCAtIHRoaXMubWFyZ2luLmJvdHRvbSAtIHRoaXMubWFyZ2luLnRvcCwgdGhpcy5tYXJnaW4udG9wXSkKICAgICAgfTsKICAgIH0sCiAgICByZWFjdGlvbnM6IGZ1bmN0aW9uIHJlYWN0aW9ucygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5jb3VudHJpZXMpIHJldHVybiBmYWxzZTsKICAgICAgdmFyIGZvcm1hdFRpbWUgPSBkMy50aW1lRm9ybWF0KCIlbS8lZC8leSIpOwogICAgICB2YXIgcmVhY3Rpb25BcnIgPSBbXTsgLy9jcmVhdGUgc2FtcGxlIHJlYWN0aW9ucwoKICAgICAgT2JqZWN0LmtleXModGhpcy5jb3VudHJpZXMpLmZvckVhY2goZnVuY3Rpb24gKGNvdW50cnkpIHsKICAgICAgICBkMy5yYW5nZSgzMDApLmZvckVhY2goZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIGRhdGUgPSBfdGhpcy5nZXRSYW5kb21EYXRlKF90aGlzLnNjYWxlcy54LmRvbWFpbigpKTsKCiAgICAgICAgICByZWFjdGlvbkFyci5wdXNoKHsKICAgICAgICAgICAgZGF0ZTogZGF0ZSwKICAgICAgICAgICAgdmFsdWU6IF90aGlzLmNvdW50cmllc1tjb3VudHJ5XS5jYXNlcy5maW5kKGZ1bmN0aW9uIChjKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGZvcm1hdFRpbWUoYy5kYXRlKSA9PSBmb3JtYXRUaW1lKGRhdGUpOwogICAgICAgICAgICB9KVtfdGhpcy5tZXRyaWNdLAogICAgICAgICAgICBjb21tZW50OiAiZm9vYmFyIiwKICAgICAgICAgICAgd2VpZ2h0OiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzICsgMiksCiAgICAgICAgICAgIGNvdW50cnk6IGNvdW50cnkKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdmFyIGZvcmNlID0gZDMuZm9yY2VTaW11bGF0aW9uKHJlYWN0aW9uQXJyKS5mb3JjZSgnZm9yY2VYJywgZDMuZm9yY2VYKGZ1bmN0aW9uIChyZWFjdGlvbikgewogICAgICAgIHJldHVybiBfdGhpcy5zY2FsZXMueChyZWFjdGlvbi5kYXRlKTsKICAgICAgfSkuc3RyZW5ndGgoLjEpKS5mb3JjZSgnZm9yY2VZJywgZDMuZm9yY2VZKGZ1bmN0aW9uIChyZWFjdGlvbiwgaSkgewogICAgICAgIHJldHVybiBfdGhpcy5zY2FsZXMueShyZWFjdGlvbi52YWx1ZSkgKyAoLTggKyBpICUgMiAqIDE2KTsKICAgICAgfSkuc3RyZW5ndGgoLjEpKS5mb3JjZSgnY29sbGlkZScsIGQzLmZvcmNlQ29sbGlkZShmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLndlaWdodDsKICAgICAgfSkpOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWFjdGlvbkFyci5sZW5ndGg7ICsraSkgewogICAgICAgIGZvcmNlLnRpY2soKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZvcmNlLm5vZGVzKCk7CiAgICB9LAogICAgY291bnRyaWVzOiBmdW5jdGlvbiBjb3VudHJpZXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKCF0aGlzLmNzdiB8fCAhdGhpcy5zY2FsZXMpIHJldHVybiBmYWxzZTsKICAgICAgdmFyIGxpbmVHZW5lcmF0b3IgPSBkMy5saW5lKCkgLy8uY3VydmUoZDMuY3VydmVCYXNpcykKICAgICAgLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLnNjYWxlcy54KGQuZGF0ZSk7CiAgICAgIH0pLnkoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLnNjYWxlcy55KGRbX3RoaXMyLm1ldHJpY10pOwogICAgICB9KTsKICAgICAgdmFyIGNvdW50cmllc01hcCA9IGQzLmdyb3VwKHRoaXMuY3N2LCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmNvdW50cnk7CiAgICAgIH0pOwogICAgICB2YXIgY291bnRyaWVzT2JqID0gT2JqZWN0LmZyb21FbnRyaWVzKGNvdW50cmllc01hcCk7CiAgICAgIE9iamVjdC5rZXlzKGNvdW50cmllc09iaikubWFwKGZ1bmN0aW9uIChrZXksIGkpIHsKICAgICAgICBjb3VudHJpZXNPYmpba2V5XSA9IHsKICAgICAgICAgIGlkOiBpLAogICAgICAgICAgY2FzZXM6IGNvdW50cmllc09ialtrZXldLAogICAgICAgICAgbGluZTogbGluZUdlbmVyYXRvcihjb3VudHJpZXNPYmpba2V5XSksCiAgICAgICAgICBuYW1lOiBrZXkKICAgICAgICB9OwogICAgICB9KTsKICAgICAgcmV0dXJuIGNvdW50cmllc09iajsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAvL3RoaXMuJHN0b3JlLmNvbW1pdCgiY2FsbEFQSSIse2ZvbzogJ2Jhcid9KQogICAgdmFyIHBhcnNlRGF0ZSA9IGQzLnV0Y1BhcnNlKCIlbS8lZC8leSIpOwogICAgZDMuY3N2KCdkYXRhLmNzdicpLnRoZW4oZnVuY3Rpb24gKGQpIHsKICAgICAgX3RoaXMzLmNzdiA9IGQubWFwKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgICByb3cubmFtZSA9IHJvdy5jb3VudHJ5OwogICAgICAgIHJvdy5kYXRlID0gcGFyc2VEYXRlKHJvdy5kYXRlKTsKICAgICAgICByZXR1cm4gcm93OwogICAgICB9KS5maWx0ZXIoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5jb3VudHJ5ID09ICJHZXJtYW55IjsKICAgICAgfSk7CiAgICB9KTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCJyZXNpemUiLCB0aGlzLnJlc2l6ZSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICBfdGhpczQucmVzaXplKCk7CgogICAgICBfdGhpczQubW91bnRlZCA9IHRydWU7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFJhbmRvbURhdGU6IGZ1bmN0aW9uIGdldFJhbmRvbURhdGUoZXh0ZW50KSB7CiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoZXh0ZW50WzBdLmdldFRpbWUoKSArIE1hdGgucmFuZG9tKCkgKiAoZXh0ZW50WzFdLmdldFRpbWUoKSAtIGV4dGVudFswXS5nZXRUaW1lKCkpKTsKICAgICAgZGF0ZS5zZXRIb3VycygwLCAwLCAwKTsKICAgICAgcmV0dXJuIGRhdGU7CiAgICB9LAogICAgcmVzaXplOiBmdW5jdGlvbiByZXNpemUoKSB7CiAgICAgIHRoaXMud2lkdGggPSB0aGlzLiRyZWZzLmNvbnRhaW5lci5vZmZzZXRXaWR0aDsKICAgICAgdGhpcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7CiAgICB9LAogICAgaG92ZXI6IGZ1bmN0aW9uIGhvdmVyKHJlYWN0aW9uLCBldmVudCkgewogICAgICB2YXIgciA9IDEwOwogICAgICB2YXIgb3BhY2l0eSA9IDE7CgogICAgICBpZiAoZXZlbnQudHlwZSA9PSAnbW91c2VvdXQnKSB7CiAgICAgICAgciA9IHJlYWN0aW9uLndlaWdodDsKICAgICAgICBvcGFjaXR5ID0gdGhpcy5vcGFjaXR5OwogICAgICB9CgogICAgICBkMy5zZWxlY3QoZXZlbnQudGFyZ2V0KS50cmFuc2l0aW9uKCI1MCIpLmF0dHIoInIiLCByKS5hdHRyKCJvcGFjaXR5Iiwgb3BhY2l0eSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div id=\"app\" class=\"container-fluid\" ref=\"container\">\n      <memoryForm />\n      <svg :width=\"width\" :height=\"height\" v-if=\"mounted\">\n        <defs>\n          <filter id=\"f0\"><feGaussianBlur in=\"SourceGraphic\" :stdDeviation=\"1\" /></filter>\n          <filter id=\"f1\"><feGaussianBlur in=\"SourceGraphic\" :stdDeviation=\"3\" /></filter>\n          <filter id=\"f1\"><feGaussianBlur in=\"SourceGraphic\" :stdDeviation=\"5\" /></filter>\n        </defs>\n\n        <g class=\"lines\" v-if=\"countries\">\n          <path\n            v-for=\"country,i in countries\"\n            :key=\"i\"\n            :d=\"country.line\"\n            stroke-width=\"3\"\n            :class=\"(country.name == currentCountry) ? 'active' : 'hidden-'+(country.id%3)\" />\n        </g>\n\n        <g class=\"reactions\" v-if=\"reactions\" transform=\"translate(0,0)\">\n          <circle\n            v-for=\"reaction, j in reactions\"\n            :key=\"j\" :cx=\"reaction.x\"\n            :cy=\"reaction.y\"\n            :opacity=\"opacity\"\n            :class=\"(reaction.country == currentCountry) ? 'active' : 'hidden-1'\"\n            :r=\"reaction.weight\"\n            fill=\"#FA5E2D\"\n            @mouseover=\"hover(reaction,$event)\"\n            @mouseout=\"hover(reaction,$event)\" />\n        </g>\n      </svg>\n    </div>\n  </div>\n</template>\n\n<script>\nimport memoryForm from './components/memoryForm'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'App',\n  components: {\n    memoryForm\n  },\n\n  data () {\n    return {\n      currentCountry: 'Germany',\n      mounted: false,\n      opacity: .7,\n      width: 0,\n      height: 0,\n      margin: {top: 50, right: 50, bottom: 50, left: 50},\n      metric: 'relative',\n      csv: null,\n    }\n  },\n\n  computed: {\n    scales: function() {\n      if(!this.csv) return null\n      let yDomain = [0,200]//d3.max(this.csv, d=>+d[this.metric])]\n      let xDomain = d3.extent(this.csv, d=>d.date)\n      return {\n        x: d3.scaleTime().domain(xDomain).range([this.margin.left,this.width-this.margin.left-this.margin.right]),\n        y: d3.scaleLinear().domain(yDomain).range([this.height-this.margin.bottom-this.margin.top,this.margin.top])\n      }\n    },\n\n    reactions: function(){\n      if(!this.countries) return false\n\n      let formatTime = d3.timeFormat(\"%m/%d/%y\")\n      let reactionArr = [] //create sample reactions\n      Object.keys(this.countries).forEach(country => {\n        d3.range(300).forEach(() => {\n          let date = this.getRandomDate(this.scales.x.domain())\n          reactionArr.push({\n            date: date,\n            value: this.countries[country].cases.find(c => formatTime(c.date) == formatTime(date))[this.metric],\n            comment: \"foobar\",\n            weight: Math.floor(Math.random()*3+2),\n            country: country,\n          })\n        })\n      })\n\n      let force = d3.forceSimulation(reactionArr)\n       .force('forceX', d3.forceX(reaction => this.scales.x(reaction.date)).strength(.1))\n       .force('forceY', d3.forceY((reaction,i) => this.scales.y(reaction.value) + (-8 + (i%2)*16)).strength(.1))\n       .force('collide', d3.forceCollide(d => d.weight))\n     for (let i = 0; i < reactionArr.length; ++i) {\n       force.tick()\n     }\n     return force.nodes()\n\n    },\n\n    countries: function() {\n      if(!this.csv || !this.scales) return false\n\n      const lineGenerator = d3.line()\n        //.curve(d3.curveBasis)\n        .x(d => this.scales.x(d.date))\n        .y(d => this.scales.y(d[this.metric]))\n\n     let countriesMap = d3.group(this.csv, d => d.country)\n     let countriesObj = Object.fromEntries(countriesMap)\n     Object.keys(countriesObj).map((key,i) => {\n       countriesObj[key] = {\n         id: i,\n         cases: countriesObj[key],\n         line: lineGenerator(countriesObj[key]),\n         name: key\n       }\n     })\n     return countriesObj\n    },\n  },\n\n  created() {\n    //this.$store.commit(\"callAPI\",{foo: 'bar'})\n    const parseDate = d3.utcParse(\"%m/%d/%y\")\n    d3.csv('data.csv').then(d => {\n      this.csv = d.map(row => {\n        row.name = row.country\n        row.date = parseDate(row.date)\n        return row\n      })\n          .filter(d=> d.country == \"Germany\")\n    })\n\n    window.addEventListener(\"resize\", this.resize);\n  },\n\n  mounted() {\n\n    this.$nextTick(() => {\n      this.resize()\n      this.mounted = true;\n    })\n  },\n\n  methods: {\n    getRandomDate: function(extent) {\n      let date = new Date(extent[0].getTime() + Math.random() * (extent[1].getTime() - extent[0].getTime()))\n      date.setHours(0,0,0)\n      return date\n    },\n\n    resize: function() {\n      this.width = this.$refs.container.offsetWidth\n      this.height = window.innerHeight\n    },\n\n    hover: function(reaction,event) {\n      let r = 10\n      let opacity = 1\n      if(event.type == 'mouseout') {\n        r = reaction.weight\n        opacity = this.opacity\n      }\n      d3.select(event.target).transition(\"50\").attr(\"r\",r).attr(\"opacity\",opacity)\n    }\n  }\n}\n</script>\n\n<style>\n@import url('https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css');\n\n.wrapper {\n  width: 100%;\n  height: 100%;\n  //background: radial-gradient(83.17% 83.17% at 18.37% 16.83%, #20CB86 0%, #15B5B5 100%);/* Rectangle 237 */\n  //background: linear-gradient(121.09deg, #64033D 16.58%, #100530 82.74%);\n}\n\n#app {\n  min-height: 100%;\n  height: 100%\n}\n\n.hidden-0, .hidden-1, .hidden-2 {\n  fill-opacity: .2;\n  stroke-opacity: .5;\n}\n.hidden-0 {filter: url('#f0')}\n.hidden-1 {filter: url('#f1')}\n.hidden-2 {filter: url('#f2')}\n\npath {\n  fill: none;\n  stroke: black;\n}\n</style>\n"],"sourceRoot":"src"}]}